module fr.lip6.move.gal.GenerateLogic

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "fr.lip6.move.gal.logic"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = false
				}
				web = {
					enabled = false
				}
				createEclipseMetaData = false				
			}
			
			code =  {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false	
			}
		}
		language = XtextGeneratorLanguage {
			name = "fr.lip6.move.gal.Logic"
			fileExtensions = "prop"
			referencedResource = "platform:/resource/fr.lip6.move.gal/model/generated/Gal.genmodel"
			fragment = grammarAccess.GrammarAccessFragment2 {}
			fragment = ecore.EMFGeneratorFragment2 {}
			//fragment = serializer.SerializerFragment2 {}
			fragment = resourceFactory.ResourceFactoryFragment2 {}
			fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
				// yes, the grammar is ambiguous, but we parse from XML in production scenarios anyway
				// we just want the xtext grammar to generate the correct ecore metamodel + API
                 options = {
                      memoize = true
                      backtrack = true
                  }
				
			}
			fragment = exporting.QualifiedNamesFragment2 {}

		}
	}
}
