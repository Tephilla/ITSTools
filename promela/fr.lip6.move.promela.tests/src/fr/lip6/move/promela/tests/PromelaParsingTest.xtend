/*
 * generated by Xtext 2.11.0
 */
package fr.lip6.move.promela.tests

import com.google.inject.Inject
import fr.lip6.move.promela.promela.PromelaSpecification
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.eclipse.xtext.junit4.AbstractXtextTests
import java.io.File
import org.junit.Before

@RunWith(XtextRunner)
@InjectWith(PromelaInjectorProvider)
class PromelaParsingTest extends AbstractXtextTests {
	@Inject
	ParseHelper<PromelaSpecification> promelaParser;

	private int index = -1;

	ReadPromelaFile reader = new ReadPromelaFile(new File("./src/promelaSamples"), ".*\\.pml");
	File [] files = reader.getFiles();

	@Before
	def void incrIndex() {
		index++;
	}
	@Test
	def void loadModel() {
		for (file : files) {
			val result = promelaParser.parse(ReadPromelaFile.readFileAsString(file))
			Assert.assertNotNull(result)
			Assert.assertTrue(result.eResource.errors.isEmpty)
		}
	}

	/*
	 * Exemple de Test Spécifique, Gal Mode les fichier étaient reprérés par
	 * leur position dans leur dosier. préférer un système plus flexible se basant sr le nom du fichier! (Path?)
	 * 
	 * @Test public void bakeryGal() throws Exception{
	 * 
	 * System bakery = galParser.parse(readFileAsString(files[index]));
	 * assertEquals(2, bakery.getArrays().size()); assertEquals(9,
	 * bakery.getVariables().size()); assertEquals(24,
	 * bakery.getTransitions().size()); assertEquals(0,
	 * bakery.getLists().size());
	 * 
	 * assertEquals("bakery.4.dve", bakery.getName());
	 * 
	 * for(int i=0; i < 24; i++) assertEquals("t"+i,
	 * bakery.getTransitions().get(i).getName());
	 * 
	 * assertTrue(3 == bakery.getTransitions().get(9).getActions().size()); }
	 */
//	@Inject
//	ParseHelper<PromelaSpecification> parseHelper
//	
//	@Test
//	def void loadModel() {
//		val result = parseHelper.parse('''
//			Hello Xtext!
//		''')
//		Assert.assertNotNull(result)
//		Assert.assertTrue(result.eResource.errors.isEmpty)
//	}
}
