/*
* generated by Xtext
*/
grammar InternalDivine;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package fr.lip6.move.divine.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.lip6.move.divine.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.lip6.move.divine.services.DivineGrammarAccess;

}

@parser::members {
 
 	private DivineGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DivineGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDivineSpecification
entryRuleDivineSpecification 
:
{ before(grammarAccess.getDivineSpecificationRule()); }
	 ruleDivineSpecification
{ after(grammarAccess.getDivineSpecificationRule()); } 
	 EOF 
;

// Rule DivineSpecification
ruleDivineSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivineSpecificationAccess().getGroup()); }
(rule__DivineSpecification__Group__0)
{ after(grammarAccess.getDivineSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration 
:
{ before(grammarAccess.getConstantDeclarationRule()); }
	 ruleConstantDeclaration
{ after(grammarAccess.getConstantDeclarationRule()); } 
	 EOF 
;

// Rule ConstantDeclaration
ruleConstantDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup()); }
(rule__ConstantDeclaration__Group__0)
{ after(grammarAccess.getConstantDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelDeclaration
entryRuleChannelDeclaration 
:
{ before(grammarAccess.getChannelDeclarationRule()); }
	 ruleChannelDeclaration
{ after(grammarAccess.getChannelDeclarationRule()); } 
	 EOF 
;

// Rule ChannelDeclaration
ruleChannelDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelDeclarationAccess().getGroup()); }
(rule__ChannelDeclaration__Group__0)
{ after(grammarAccess.getChannelDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannel
entryRuleChannel 
:
{ before(grammarAccess.getChannelRule()); }
	 ruleChannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule Channel
ruleChannel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelAccess().getNameAssignment()); }
(rule__Channel__NameAssignment)
{ after(grammarAccess.getChannelAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcess
entryRuleProcess 
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessAccess().getGroup()); }
(rule__Process__Group__0)
{ after(grammarAccess.getProcessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateDeclaration
entryRuleStateDeclaration 
:
{ before(grammarAccess.getStateDeclarationRule()); }
	 ruleStateDeclaration
{ after(grammarAccess.getStateDeclarationRule()); } 
	 EOF 
;

// Rule StateDeclaration
ruleStateDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup()); }
(rule__StateDeclaration__Group__0)
{ after(grammarAccess.getStateDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getNameAssignment()); }
(rule__State__NameAssignment)
{ after(grammarAccess.getStateAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertion
entryRuleAssertion 
:
{ before(grammarAccess.getAssertionRule()); }
	 ruleAssertion
{ after(grammarAccess.getAssertionRule()); } 
	 EOF 
;

// Rule Assertion
ruleAssertion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssertionAccess().getGroup()); }
(rule__Assertion__Group__0)
{ after(grammarAccess.getAssertionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuard
entryRuleGuard 
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardAccess().getGroup()); }
(rule__Guard__Group__0)
{ after(grammarAccess.getGuardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSync
entryRuleSync 
:
{ before(grammarAccess.getSyncRule()); }
	 ruleSync
{ after(grammarAccess.getSyncRule()); } 
	 EOF 
;

// Rule Sync
ruleSync
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSyncAccess().getAlternatives()); }
(rule__Sync__Alternatives)
{ after(grammarAccess.getSyncAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSend
entryRuleSend 
:
{ before(grammarAccess.getSendRule()); }
	 ruleSend
{ after(grammarAccess.getSendRule()); } 
	 EOF 
;

// Rule Send
ruleSend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSendAccess().getGroup()); }
(rule__Send__Group__0)
{ after(grammarAccess.getSendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecv
entryRuleRecv 
:
{ before(grammarAccess.getRecvRule()); }
	 ruleRecv
{ after(grammarAccess.getRecvRule()); } 
	 EOF 
;

// Rule Recv
ruleRecv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecvAccess().getGroup()); }
(rule__Recv__Group__0)
{ after(grammarAccess.getRecvAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getGroup()); }
(rule__Effect__Group__0)
{ after(grammarAccess.getEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssign
entryRuleAssign 
:
{ before(grammarAccess.getAssignRule()); }
	 ruleAssign
{ after(grammarAccess.getAssignRule()); } 
	 EOF 
;

// Rule Assign
ruleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignAccess().getGroup()); }
(rule__Assign__Group__0)
{ after(grammarAccess.getAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall()); }
	ruleBooleanExpression
{ after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
(rule__BooleanExpression__Group__0)
{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrAndXor
entryRuleOrAndXor 
:
{ before(grammarAccess.getOrAndXorRule()); }
	 ruleOrAndXor
{ after(grammarAccess.getOrAndXorRule()); } 
	 EOF 
;

// Rule OrAndXor
ruleOrAndXor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAndXorAccess().getGroup()); }
(rule__OrAndXor__Group__0)
{ after(grammarAccess.getOrAndXorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShift
entryRuleShift 
:
{ before(grammarAccess.getShiftRule()); }
	 ruleShift
{ after(grammarAccess.getShiftRule()); } 
	 EOF 
;

// Rule Shift
ruleShift
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftAccess().getGroup()); }
(rule__Shift__Group__0)
{ after(grammarAccess.getShiftAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixed
entryRulePrefixed 
:
{ before(grammarAccess.getPrefixedRule()); }
	 rulePrefixed
{ after(grammarAccess.getPrefixedRule()); } 
	 EOF 
;

// Rule Prefixed
rulePrefixed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixedAccess().getAlternatives()); }
(rule__Prefixed__Alternatives)
{ after(grammarAccess.getPrefixedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomic
entryRuleAtomic 
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
(rule__Atomic__Alternatives)
{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleVarAccess
entryRuleVarAccess 
:
{ before(grammarAccess.getVarAccessRule()); }
	 ruleVarAccess
{ after(grammarAccess.getVarAccessRule()); } 
	 EOF 
;

// Rule VarAccess
ruleVarAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAccessAccess().getAlternatives()); }
(rule__VarAccess__Alternatives)
{ after(grammarAccess.getVarAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableRef
entryRuleVariableRef 
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableRefAccess().getReferencedVarAssignment()); }
(rule__VariableRef__ReferencedVarAssignment)
{ after(grammarAccess.getVariableRefAccess().getReferencedVarAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayVarAccess
entryRuleArrayVarAccess 
:
{ before(grammarAccess.getArrayVarAccessRule()); }
	 ruleArrayVarAccess
{ after(grammarAccess.getArrayVarAccessRule()); } 
	 EOF 
;

// Rule ArrayVarAccess
ruleArrayVarAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayVarAccessAccess().getGroup()); }
(rule__ArrayVarAccess__Group__0)
{ after(grammarAccess.getArrayVarAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcessStateAccess
entryRuleProcessStateAccess 
:
{ before(grammarAccess.getProcessStateAccessRule()); }
	 ruleProcessStateAccess
{ after(grammarAccess.getProcessStateAccessRule()); } 
	 EOF 
;

// Rule ProcessStateAccess
ruleProcessStateAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessStateAccessAccess().getGroup()); }
(rule__ProcessStateAccess__Group__0)
{ after(grammarAccess.getProcessStateAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystemType
entryRuleSystemType 
:
{ before(grammarAccess.getSystemTypeRule()); }
	 ruleSystemType
{ after(grammarAccess.getSystemTypeRule()); } 
	 EOF 
;

// Rule SystemType
ruleSystemType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemTypeAccess().getGroup()); }
(rule__SystemType__Group__0)
{ after(grammarAccess.getSystemTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__DivineSpecification__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getVariablesDeclAssignment_0_0()); }
(rule__DivineSpecification__VariablesDeclAssignment_0_0)
{ after(grammarAccess.getDivineSpecificationAccess().getVariablesDeclAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDivineSpecificationAccess().getConstantsDeclAssignment_0_1()); }
(rule__DivineSpecification__ConstantsDeclAssignment_0_1)
{ after(grammarAccess.getDivineSpecificationAccess().getConstantsDeclAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getDivineSpecificationAccess().getChannelsDeclAssignment_0_2()); }
(rule__DivineSpecification__ChannelsDeclAssignment_0_2)
{ after(grammarAccess.getDivineSpecificationAccess().getChannelsDeclAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__TypeAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeIntKeyword_1_0_0()); }

	'int' 

{ after(grammarAccess.getConstantDeclarationAccess().getTypeIntKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeByteKeyword_1_0_1()); }

	'byte' 

{ after(grammarAccess.getConstantDeclarationAccess().getTypeByteKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeIntKeyword_0_0_0()); }

	'int' 

{ after(grammarAccess.getVariableDeclarationAccess().getTypeIntKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeByteKeyword_0_0_1()); }

	'byte' 

{ after(grammarAccess.getVariableDeclarationAccess().getTypeByteKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariablesAssignment_1_0()); }
(rule__VariableDeclaration__VariablesAssignment_1_0)
{ after(grammarAccess.getVariableDeclarationAccess().getVariablesAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getArraysAssignment_1_1()); }
(rule__VariableDeclaration__ArraysAssignment_1_1)
{ after(grammarAccess.getVariableDeclarationAccess().getArraysAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariablesAssignment_2_1_0()); }
(rule__VariableDeclaration__VariablesAssignment_2_1_0)
{ after(grammarAccess.getVariableDeclarationAccess().getVariablesAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getArraysAssignment_2_1_1()); }
(rule__VariableDeclaration__ArraysAssignment_2_1_1)
{ after(grammarAccess.getVariableDeclarationAccess().getArraysAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getVariablesDecAssignment_3_0()); }
(rule__Process__VariablesDecAssignment_3_0)
{ after(grammarAccess.getProcessAccess().getVariablesDecAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getProcessAccess().getConstantsDecAssignment_3_1()); }
(rule__Process__ConstantsDecAssignment_3_1)
{ after(grammarAccess.getProcessAccess().getConstantsDecAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sync__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyncAccess().getSendParserRuleCall_0()); }
	ruleSend
{ after(grammarAccess.getSyncAccess().getSendParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSyncAccess().getRecvParserRuleCall_1()); }
	ruleRecv
{ after(grammarAccess.getSyncAccess().getRecvParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_1_0_0()); }

	'=>' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_0_1_0_1()); }

	'||' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAmpersandAmpersandKeyword_1_0_1_0_2()); }

	'&&' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpAmpersandAmpersandKeyword_1_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getOpImplyKeyword_1_0_1_0_3()); }

	'imply' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpImplyKeyword_1_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAndKeyword_1_0_1_0_4()); }

	'and' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpAndKeyword_1_0_1_0_4()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getOpOrKeyword_1_0_1_0_5()); }

	'or' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpOrKeyword_1_0_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getOpVerticalLineKeyword_1_0_1_0_0()); }

	'|' 

{ after(grammarAccess.getOrAndXorAccess().getOpVerticalLineKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getOrAndXorAccess().getOpAmpersandKeyword_1_0_1_0_1()); }

	'&' 

{ after(grammarAccess.getOrAndXorAccess().getOpAmpersandKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getOrAndXorAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }

	'^' 

{ after(grammarAccess.getOrAndXorAccess().getOpCircumflexAccentKeyword_1_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0_0()); }

	'==' 

{ after(grammarAccess.getComparisonAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_1()); }

	'!=' 

{ after(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_2()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_3()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_4()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_5()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getOpLessThanSignLessThanSignKeyword_1_0_1_0_0()); }

	'<<' 

{ after(grammarAccess.getShiftAccess().getOpLessThanSignLessThanSignKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getShiftAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_0_1_0_1()); }

	'>>' 

{ after(grammarAccess.getShiftAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpPercentSignKeyword_1_0_1_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicationAccess().getOpPercentSignKeyword_1_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getGroup_0()); }
(rule__Prefixed__Group_0__0)
{ after(grammarAccess.getPrefixedAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrefixedAccess().getGroup_1()); }
(rule__Prefixed__Group_1__0)
{ after(grammarAccess.getPrefixedAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrefixedAccess().getGroup_2()); }
(rule__Prefixed__Group_2__0)
{ after(grammarAccess.getPrefixedAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrefixedAccess().getAtomicParserRuleCall_3()); }
	ruleAtomic
{ after(grammarAccess.getPrefixedAccess().getAtomicParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Alternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExclamationMarkKeyword_0_1_0_0()); }

	'!' 

{ after(grammarAccess.getPrefixedAccess().getExclamationMarkKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixedAccess().getNotKeyword_0_1_0_1()); }

	'not' 

{ after(grammarAccess.getPrefixedAccess().getNotKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
(rule__Atomic__Group_0__0)
{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
(rule__Atomic__Group_1__0)
{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
(rule__Atomic__Group_2__0)
{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
(rule__Atomic__Group_3__0)
{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
(rule__Atomic__Group_4__0)
{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
(rule__Atomic__Group_5__0)
{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_6()); }
(rule__Atomic__Group_6__0)
{ after(grammarAccess.getAtomicAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueTrueKeyword_3_1_0_0()); }

	'true' 

{ after(grammarAccess.getAtomicAccess().getValueTrueKeyword_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getValueFalseKeyword_3_1_0_1()); }

	'false' 

{ after(grammarAccess.getAtomicAccess().getValueFalseKeyword_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccessAccess().getArrayVarAccessParserRuleCall_0()); }
	ruleArrayVarAccess
{ after(grammarAccess.getVarAccessAccess().getArrayVarAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVarAccessAccess().getVariableRefParserRuleCall_1()); }
	ruleVariableRef
{ after(grammarAccess.getVarAccessAccess().getVariableRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemType__SystemTypeAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemTypeAccess().getSystemTypeSyncKeyword_1_0_0()); }

	'sync' 

{ after(grammarAccess.getSystemTypeAccess().getSystemTypeSyncKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getSystemTypeAccess().getSystemTypeAsyncKeyword_1_0_1()); }

	'async' 

{ after(grammarAccess.getSystemTypeAccess().getSystemTypeAsyncKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DivineSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivineSpecification__Group__0__Impl
	rule__DivineSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getAlternatives_0()); }
(rule__DivineSpecification__Alternatives_0)*
{ after(grammarAccess.getDivineSpecificationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivineSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivineSpecification__Group__1__Impl
	rule__DivineSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getProcessesAssignment_1()); }
(rule__DivineSpecification__ProcessesAssignment_1)*
{ after(grammarAccess.getDivineSpecificationAccess().getProcessesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivineSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivineSpecification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getSystemTypeAssignment_2()); }
(rule__DivineSpecification__SystemTypeAssignment_2)
{ after(grammarAccess.getDivineSpecificationAccess().getSystemTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__0__Impl
	rule__ConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstKeyword_0()); }

	'const' 

{ after(grammarAccess.getConstantDeclarationAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__1__Impl
	rule__ConstantDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1()); }
(rule__ConstantDeclaration__TypeAssignment_1)
{ after(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__2__Impl
	rule__ConstantDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantsAssignment_2()); }
(rule__ConstantDeclaration__ConstantsAssignment_2)
{ after(grammarAccess.getConstantDeclarationAccess().getConstantsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__3__Impl
	rule__ConstantDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup_3()); }
(rule__ConstantDeclaration__Group_3__0)*
{ after(grammarAccess.getConstantDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstantDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group_3__0__Impl
	rule__ConstantDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getConstantDeclarationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantsAssignment_3_1()); }
(rule__ConstantDeclaration__ConstantsAssignment_3_1)
{ after(grammarAccess.getConstantDeclarationAccess().getConstantsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_0()); }
(rule__Constant__NameAssignment_0)
{ after(grammarAccess.getConstantAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getInitValueAssignment_2()); }
(rule__Constant__InitValueAssignment_2)
{ after(grammarAccess.getConstantAccess().getInitValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__VariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_1()); }
(rule__VariableDeclaration__Alternatives_1)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
(rule__VariableDeclaration__Group_2__0)*
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_2_1()); }
(rule__VariableDeclaration__Alternatives_2_1)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
(rule__Variable__NameAssignment_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)?
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitValueAssignment_1_1()); }
(rule__Variable__InitValueAssignment_1_1)
{ after(grammarAccess.getVariableAccess().getInitValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getNameAssignment_0()); }
(rule__Array__NameAssignment_0)
{ after(grammarAccess.getArrayAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getSizeAssignment_2()); }
(rule__Array__SizeAssignment_2)
{ after(grammarAccess.getArrayAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
	rule__Array__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_4()); }
(rule__Array__Group_4__0)?
{ after(grammarAccess.getArrayAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__0__Impl
	rule__Array__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getEqualsSignKeyword_4_0()); }

	'=' 

{ after(grammarAccess.getArrayAccess().getEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__1__Impl
	rule__Array__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getArrayAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__2__Impl
	rule__Array__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getInitValueAssignment_4_2()); }
(rule__Array__InitValueAssignment_4_2)
{ after(grammarAccess.getArrayAccess().getInitValueAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__3__Impl
	rule__Array__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_4_3()); }
(rule__Array__Group_4_3__0)*
{ after(grammarAccess.getArrayAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getArrayAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4_3__0__Impl
	rule__Array__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getArrayAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getInitValueAssignment_4_3_1()); }
(rule__Array__InitValueAssignment_4_3_1)
{ after(grammarAccess.getArrayAccess().getInitValueAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDeclaration__Group__0__Impl
	rule__ChannelDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getChannelKeyword_0()); }

	'channel' 

{ after(grammarAccess.getChannelDeclarationAccess().getChannelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDeclaration__Group__1__Impl
	rule__ChannelDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getChannelsAssignment_1()); }
(rule__ChannelDeclaration__ChannelsAssignment_1)
{ after(grammarAccess.getChannelDeclarationAccess().getChannelsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDeclaration__Group__2__Impl
	rule__ChannelDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getGroup_2()); }
(rule__ChannelDeclaration__Group_2__0)*
{ after(grammarAccess.getChannelDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getChannelDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ChannelDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDeclaration__Group_2__0__Impl
	rule__ChannelDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getChannelDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getChannelsAssignment_2_1()); }
(rule__ChannelDeclaration__ChannelsAssignment_2_1)
{ after(grammarAccess.getChannelDeclarationAccess().getChannelsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Process__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }

	'process' 

{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getNameAssignment_1()); }
(rule__Process__NameAssignment_1)
{ after(grammarAccess.getProcessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getAlternatives_3()); }
(rule__Process__Alternatives_3)*
{ after(grammarAccess.getProcessAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getStateDeclarationAssignment_4()); }
(rule__Process__StateDeclarationAssignment_4)?
{ after(grammarAccess.getProcessAccess().getStateDeclarationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__5__Impl
	rule__Process__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getGroup_5()); }
(rule__Process__Group_5__0)?
{ after(grammarAccess.getProcessAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__6__Impl
	rule__Process__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTransKeyword_6()); }

	'trans' 

{ after(grammarAccess.getProcessAccess().getTransKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__7__Impl
	rule__Process__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTransitionsAssignment_7()); }
(rule__Process__TransitionsAssignment_7)
{ after(grammarAccess.getProcessAccess().getTransitionsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__8__Impl
	rule__Process__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getGroup_8()); }
(rule__Process__Group_8__0)*
{ after(grammarAccess.getProcessAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__9__Impl
	rule__Process__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Process__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_5__0__Impl
	rule__Process__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getAssertKeyword_5_0()); }

	'assert' 

{ after(grammarAccess.getProcessAccess().getAssertKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_5__1__Impl
	rule__Process__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getAssertionsAssignment_5_1()); }
(rule__Process__AssertionsAssignment_5_1)
{ after(grammarAccess.getProcessAccess().getAssertionsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_5__2__Impl
	rule__Process__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getGroup_5_2()); }
(rule__Process__Group_5_2__0)*
{ after(grammarAccess.getProcessAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_5_3()); }

	';' 

{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Process__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_5_2__0__Impl
	rule__Process__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getProcessAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getAssertionsAssignment_5_2_1()); }
(rule__Process__AssertionsAssignment_5_2_1)
{ after(grammarAccess.getProcessAccess().getAssertionsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Process__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_8__0__Impl
	rule__Process__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getProcessAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Process__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTransitionsAssignment_8_1()); }
(rule__Process__TransitionsAssignment_8_1)
{ after(grammarAccess.getProcessAccess().getTransitionsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__0__Impl
	rule__StateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getStateDeclarationAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__1__Impl
	rule__StateDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getStatesAssignment_1()); }
(rule__StateDeclaration__StatesAssignment_1)
{ after(grammarAccess.getStateDeclarationAccess().getStatesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__2__Impl
	rule__StateDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup_2()); }
(rule__StateDeclaration__Group_2__0)*
{ after(grammarAccess.getStateDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__3__Impl
	rule__StateDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__4__Impl
	rule__StateDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getInitKeyword_4()); }

	'init' 

{ after(grammarAccess.getStateDeclarationAccess().getInitKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__5__Impl
	rule__StateDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getInitStateAssignment_5()); }
(rule__StateDeclaration__InitStateAssignment_5)
{ after(grammarAccess.getStateDeclarationAccess().getInitStateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__6__Impl
	rule__StateDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__7__Impl
	rule__StateDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup_7()); }
(rule__StateDeclaration__Group_7__0)?
{ after(grammarAccess.getStateDeclarationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup_8()); }
(rule__StateDeclaration__Group_8__0)?
{ after(grammarAccess.getStateDeclarationAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__StateDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_2__0__Impl
	rule__StateDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getStateDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getStatesAssignment_2_1()); }
(rule__StateDeclaration__StatesAssignment_2_1)
{ after(grammarAccess.getStateDeclarationAccess().getStatesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateDeclaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_7__0__Impl
	rule__StateDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptKeyword_7_0()); }

	'accept' 

{ after(grammarAccess.getStateDeclarationAccess().getAcceptKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_7__1__Impl
	rule__StateDeclaration__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptStatesAssignment_7_1()); }
(rule__StateDeclaration__AcceptStatesAssignment_7_1)
{ after(grammarAccess.getStateDeclarationAccess().getAcceptStatesAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_7__2__Impl
	rule__StateDeclaration__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup_7_2()); }
(rule__StateDeclaration__Group_7_2__0)*
{ after(grammarAccess.getStateDeclarationAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_7_3()); }

	';' 

{ after(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StateDeclaration__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_7_2__0__Impl
	rule__StateDeclaration__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommaKeyword_7_2_0()); }

	',' 

{ after(grammarAccess.getStateDeclarationAccess().getCommaKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptStatesAssignment_7_2_1()); }
(rule__StateDeclaration__AcceptStatesAssignment_7_2_1)
{ after(grammarAccess.getStateDeclarationAccess().getAcceptStatesAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateDeclaration__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_8__0__Impl
	rule__StateDeclaration__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitKeyword_8_0()); }

	'commit' 

{ after(grammarAccess.getStateDeclarationAccess().getCommitKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_8__1__Impl
	rule__StateDeclaration__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitStatesAssignment_8_1()); }
(rule__StateDeclaration__CommitStatesAssignment_8_1)
{ after(grammarAccess.getStateDeclarationAccess().getCommitStatesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_8__2__Impl
	rule__StateDeclaration__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup_8_2()); }
(rule__StateDeclaration__Group_8_2__0)*
{ after(grammarAccess.getStateDeclarationAccess().getGroup_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_8_3()); }

	';' 

{ after(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StateDeclaration__Group_8_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_8_2__0__Impl
	rule__StateDeclaration__Group_8_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_8_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommaKeyword_8_2_0()); }

	',' 

{ after(grammarAccess.getStateDeclarationAccess().getCommaKeyword_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_8_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_8_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_8_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitStatesAssignment_8_2_1()); }
(rule__StateDeclaration__CommitStatesAssignment_8_2_1)
{ after(grammarAccess.getStateDeclarationAccess().getCommitStatesAssignment_8_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assertion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assertion__Group__0__Impl
	rule__Assertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionAccess().getStateAssignment_0()); }
(rule__Assertion__StateAssignment_0)
{ after(grammarAccess.getAssertionAccess().getStateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assertion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assertion__Group__1__Impl
	rule__Assertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAssertionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assertion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assertion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionAccess().getExpressionAssignment_2()); }
(rule__Assertion__ExpressionAssignment_2)
{ after(grammarAccess.getAssertionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSrcAssignment_0()); }
(rule__Transition__SrcAssignment_0)
{ after(grammarAccess.getTransitionAccess().getSrcAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDestAssignment_2()); }
(rule__Transition__DestAssignment_2)
{ after(grammarAccess.getTransitionAccess().getDestAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_4()); }
(rule__Transition__Group_4__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_5()); }
(rule__Transition__Group_5__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_6()); }
(rule__Transition__Group_6__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Transition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4__0__Impl
	rule__Transition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardAssignment_4_0()); }
(rule__Transition__GuardAssignment_4_0)
{ after(grammarAccess.getTransitionAccess().getGuardAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_5__0__Impl
	rule__Transition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSyncAssignment_5_0()); }
(rule__Transition__SyncAssignment_5_0)
{ after(grammarAccess.getTransitionAccess().getSyncAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__0__Impl
	rule__Transition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectAssignment_6_0()); }
(rule__Transition__EffectAssignment_6_0)
{ after(grammarAccess.getTransitionAccess().getEffectAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_6_1()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Guard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__0__Impl
	rule__Guard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getGuardKeyword_0()); }

	'guard' 

{ after(grammarAccess.getGuardAccess().getGuardKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getExpressionAssignment_1()); }
(rule__Guard__ExpressionAssignment_1)
{ after(grammarAccess.getGuardAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Send__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__0__Impl
	rule__Send__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getSyncKeyword_0()); }

	'sync' 

{ after(grammarAccess.getSendAccess().getSyncKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__1__Impl
	rule__Send__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getChannelAssignment_1()); }
(rule__Send__ChannelAssignment_1)
{ after(grammarAccess.getSendAccess().getChannelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__2__Impl
	rule__Send__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getSendAccess().getExclamationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getExpressionAssignment_3()); }
(rule__Send__ExpressionAssignment_3)?
{ after(grammarAccess.getSendAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Recv__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recv__Group__0__Impl
	rule__Recv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recv__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecvAccess().getSyncKeyword_0()); }

	'sync' 

{ after(grammarAccess.getRecvAccess().getSyncKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recv__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recv__Group__1__Impl
	rule__Recv__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Recv__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecvAccess().getChannelAssignment_1()); }
(rule__Recv__ChannelAssignment_1)
{ after(grammarAccess.getRecvAccess().getChannelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recv__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recv__Group__2__Impl
	rule__Recv__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Recv__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecvAccess().getQuestionMarkKeyword_2()); }

	'?' 

{ after(grammarAccess.getRecvAccess().getQuestionMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recv__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recv__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recv__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecvAccess().getVarRefAssignment_3()); }
(rule__Recv__VarRefAssignment_3)?
{ after(grammarAccess.getRecvAccess().getVarRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Effect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Effect__Group__0__Impl
	rule__Effect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getEffectKeyword_0()); }

	'effect' 

{ after(grammarAccess.getEffectAccess().getEffectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Effect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Effect__Group__1__Impl
	rule__Effect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAssignmentsAssignment_1()); }
(rule__Effect__AssignmentsAssignment_1)
{ after(grammarAccess.getEffectAccess().getAssignmentsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Effect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Effect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getGroup_2()); }
(rule__Effect__Group_2__0)*
{ after(grammarAccess.getEffectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Effect__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Effect__Group_2__0__Impl
	rule__Effect__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getEffectAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Effect__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Effect__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAssignmentsAssignment_2_1()); }
(rule__Effect__AssignmentsAssignment_2_1)
{ after(grammarAccess.getEffectAccess().getAssignmentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__0__Impl
	rule__Assign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getVarRefAssignment_0()); }
(rule__Assign__VarRefAssignment_0)
{ after(grammarAccess.getAssignAccess().getVarRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__1__Impl
	rule__Assign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getExpressionAssignment_2()); }
(rule__Assign__ExpressionAssignment_2)
{ after(grammarAccess.getAssignAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOrAndXorParserRuleCall_0()); }
	ruleOrAndXor
{ after(grammarAccess.getBooleanExpressionAccess().getOrAndXorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
(rule__BooleanExpression__Group_1__0)*
{ after(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__0__Impl
	rule__BooleanExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup_1_0()); }
(rule__BooleanExpression__Group_1_0__0)
{ after(grammarAccess.getBooleanExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_1()); }
(rule__BooleanExpression__RightAssignment_1_1)
{ after(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1_0__0__Impl
	rule__BooleanExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAndOrLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getBooleanExpressionAccess().getAndOrLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_0_1()); }
(rule__BooleanExpression__OpAssignment_1_0_1)
{ after(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrAndXor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndXor__Group__0__Impl
	rule__OrAndXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
{ after(grammarAccess.getOrAndXorAccess().getComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndXor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getGroup_1()); }
(rule__OrAndXor__Group_1__0)*
{ after(grammarAccess.getOrAndXorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrAndXor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndXor__Group_1__0__Impl
	rule__OrAndXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getGroup_1_0()); }
(rule__OrAndXor__Group_1_0__0)
{ after(grammarAccess.getOrAndXorAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndXor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndXor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getRightAssignment_1_1()); }
(rule__OrAndXor__RightAssignment_1_1)
{ after(grammarAccess.getOrAndXorAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrAndXor__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndXor__Group_1_0__0__Impl
	rule__OrAndXor__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getOrAndXorLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getOrAndXorAccess().getOrAndXorLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndXor__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndXor__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getOpAssignment_1_0_1()); }
(rule__OrAndXor__OpAssignment_1_0_1)
{ after(grammarAccess.getOrAndXorAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getShiftParserRuleCall_0()); }
	ruleShift
{ after(grammarAccess.getComparisonAccess().getShiftParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
(rule__Comparison__Group_1__0)*
{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1_0()); }
(rule__Comparison__Group_1_0__0)
{ after(grammarAccess.getComparisonAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
(rule__Comparison__RightAssignment_1_1)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0__0__Impl
	rule__Comparison__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1()); }
(rule__Comparison__OpAssignment_1_0_1)
{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift__Group__0__Impl
	rule__Shift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getShiftAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getGroup_1()); }
(rule__Shift__Group_1__0)*
{ after(grammarAccess.getShiftAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift__Group_1__0__Impl
	rule__Shift__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getGroup_1_0()); }
(rule__Shift__Group_1_0__0)
{ after(grammarAccess.getShiftAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getRightAssignment_1_1()); }
(rule__Shift__RightAssignment_1_1)
{ after(grammarAccess.getShiftAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift__Group_1_0__0__Impl
	rule__Shift__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getShiftLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getShiftAccess().getShiftLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getOpAssignment_1_0_1()); }
(rule__Shift__OpAssignment_1_0_1)
{ after(grammarAccess.getShiftAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0_0_1()); }
(rule__Addition__OpAssignment_1_0_0_1)
{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1_1()); }
(rule__Addition__OpAssignment_1_0_1_1)
{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getPrefixedParserRuleCall_0()); }
	rulePrefixed
{ after(grammarAccess.getMultiplicationAccess().getPrefixedParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
(rule__Multiplication__Group_1_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__0__Impl
	rule__Multiplication__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiDivModLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiDivModLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
(rule__Multiplication__OpAssignment_1_0_1)
{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prefixed__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_0__0__Impl
	rule__Prefixed__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getBooleanNegationAction_0_0()); }
(

)
{ after(grammarAccess.getPrefixedAccess().getBooleanNegationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefixed__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_0__1__Impl
	rule__Prefixed__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getGroup_0_1()); }
(rule__Prefixed__Group_0_1__0)
{ after(grammarAccess.getPrefixedAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefixed__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExpressionAssignment_0_2()); }
(rule__Prefixed__ExpressionAssignment_0_2)
{ after(grammarAccess.getPrefixedAccess().getExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Prefixed__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_0_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getAlternatives_0_1_0()); }
(rule__Prefixed__Alternatives_0_1_0)
{ after(grammarAccess.getPrefixedAccess().getAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Prefixed__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_1__0__Impl
	rule__Prefixed__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getArithmeticSignedAction_1_0()); }
(

)
{ after(grammarAccess.getPrefixedAccess().getArithmeticSignedAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefixed__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_1__1__Impl
	rule__Prefixed__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getHyphenMinusKeyword_1_1()); }
(
	'-' 
)
{ after(grammarAccess.getPrefixedAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefixed__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExpressionAssignment_1_2()); }
(rule__Prefixed__ExpressionAssignment_1_2)
{ after(grammarAccess.getPrefixedAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Prefixed__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_2__0__Impl
	rule__Prefixed__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getTildeAction_2_0()); }
(

)
{ after(grammarAccess.getPrefixedAccess().getTildeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefixed__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_2__1__Impl
	rule__Prefixed__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getTildeKeyword_2_1()); }
(
	'~' 
)
{ after(grammarAccess.getPrefixedAccess().getTildeKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefixed__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefixed__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExpressionAssignment_2_2()); }
(rule__Prefixed__ExpressionAssignment_2_2)
{ after(grammarAccess.getPrefixedAccess().getExpressionAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__1__Impl
	rule__Atomic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getAtomicAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getNumberLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getNumberLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
(rule__Atomic__ValueAssignment_1_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getStringLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getStringLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
(rule__Atomic__ValueAssignment_2_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getBooleanLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getBooleanLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
(rule__Atomic__ValueAssignment_3_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getVariableOrConstantReferenceAction_4_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getVariableOrConstantReferenceAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRefAssignment_4_1()); }
(rule__Atomic__RefAssignment_4_1)
{ after(grammarAccess.getAtomicAccess().getRefAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getArrayReferenceAction_5_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getArrayReferenceAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRefAssignment_5_1()); }
(rule__Atomic__RefAssignment_5_1)
{ after(grammarAccess.getAtomicAccess().getRefAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_6__0__Impl
	rule__Atomic__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getProcessReferenceAction_6_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getProcessReferenceAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRefAssignment_6_1()); }
(rule__Atomic__RefAssignment_6_1)
{ after(grammarAccess.getAtomicAccess().getRefAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayVarAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVarAccess__Group__0__Impl
	rule__ArrayVarAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVarAccessAccess().getPrefixAssignment_0()); }
(rule__ArrayVarAccess__PrefixAssignment_0)
{ after(grammarAccess.getArrayVarAccessAccess().getPrefixAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVarAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVarAccess__Group__1__Impl
	rule__ArrayVarAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVarAccessAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayVarAccessAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVarAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVarAccess__Group__2__Impl
	rule__ArrayVarAccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVarAccessAccess().getIndexAssignment_2()); }
(rule__ArrayVarAccess__IndexAssignment_2)
{ after(grammarAccess.getArrayVarAccessAccess().getIndexAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVarAccess__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayVarAccess__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarAccess__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVarAccessAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayVarAccessAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProcessStateAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessStateAccess__Group__0__Impl
	rule__ProcessStateAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStateAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessStateAccessAccess().getProcessAssignment_0()); }
(rule__ProcessStateAccess__ProcessAssignment_0)
{ after(grammarAccess.getProcessStateAccessAccess().getProcessAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessStateAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessStateAccess__Group__1__Impl
	rule__ProcessStateAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStateAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessStateAccessAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getProcessStateAccessAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessStateAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessStateAccess__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStateAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessStateAccessAccess().getStateAssignment_2()); }
(rule__ProcessStateAccess__StateAssignment_2)
{ after(grammarAccess.getProcessStateAccessAccess().getStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SystemType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemType__Group__0__Impl
	rule__SystemType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemTypeAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemTypeAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemType__Group__1__Impl
	rule__SystemType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemTypeAccess().getSystemTypeAssignment_1()); }
(rule__SystemType__SystemTypeAssignment_1)
{ after(grammarAccess.getSystemTypeAccess().getSystemTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemTypeAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getSystemTypeAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__DivineSpecification__VariablesDeclAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getVariablesDeclVariableDeclarationParserRuleCall_0_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getDivineSpecificationAccess().getVariablesDeclVariableDeclarationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__ConstantsDeclAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getConstantsDeclConstantDeclarationParserRuleCall_0_1_0()); }
	ruleConstantDeclaration{ after(grammarAccess.getDivineSpecificationAccess().getConstantsDeclConstantDeclarationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__ChannelsDeclAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getChannelsDeclChannelDeclarationParserRuleCall_0_2_0()); }
	ruleChannelDeclaration{ after(grammarAccess.getDivineSpecificationAccess().getChannelsDeclChannelDeclarationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__ProcessesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getProcessesProcessParserRuleCall_1_0()); }
	ruleProcess{ after(grammarAccess.getDivineSpecificationAccess().getProcessesProcessParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivineSpecification__SystemTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivineSpecificationAccess().getSystemTypeSystemTypeParserRuleCall_2_0()); }
	ruleSystemType{ after(grammarAccess.getDivineSpecificationAccess().getSystemTypeSystemTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeAlternatives_1_0()); }
(rule__ConstantDeclaration__TypeAlternatives_1_0)
{ after(grammarAccess.getConstantDeclarationAccess().getTypeAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__ConstantsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantsConstantParserRuleCall_2_0()); }
	ruleConstant{ after(grammarAccess.getConstantDeclarationAccess().getConstantsConstantParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__ConstantsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstantsConstantParserRuleCall_3_1_0()); }
	ruleConstant{ after(grammarAccess.getConstantDeclarationAccess().getConstantsConstantParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__InitValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getInitValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getConstantAccess().getInitValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAlternatives_0_0()); }
(rule__VariableDeclaration__TypeAlternatives_0_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariablesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariablesVariableParserRuleCall_1_0_0()); }
	ruleVariable{ after(grammarAccess.getVariableDeclarationAccess().getVariablesVariableParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ArraysAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getArraysArrayParserRuleCall_1_1_0()); }
	ruleArray{ after(grammarAccess.getVariableDeclarationAccess().getArraysArrayParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariablesAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariablesVariableParserRuleCall_2_1_0_0()); }
	ruleVariable{ after(grammarAccess.getVariableDeclarationAccess().getVariablesVariableParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ArraysAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getArraysArrayParserRuleCall_2_1_1_0()); }
	ruleArray{ after(grammarAccess.getVariableDeclarationAccess().getArraysArrayParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitValueExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableAccess().getInitValueExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArrayAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getArrayAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__InitValueAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getInitValueExpressionParserRuleCall_4_2_0()); }
	ruleExpression{ after(grammarAccess.getArrayAccess().getInitValueExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__InitValueAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getInitValueExpressionParserRuleCall_4_3_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayAccess().getInitValueExpressionParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__ChannelsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getChannelsChannelParserRuleCall_1_0()); }
	ruleChannel{ after(grammarAccess.getChannelDeclarationAccess().getChannelsChannelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDeclaration__ChannelsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDeclarationAccess().getChannelsChannelParserRuleCall_2_1_0()); }
	ruleChannel{ after(grammarAccess.getChannelDeclarationAccess().getChannelsChannelParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getChannelAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__VariablesDecAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getVariablesDecVariableDeclarationParserRuleCall_3_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getProcessAccess().getVariablesDecVariableDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ConstantsDecAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getConstantsDecConstantDeclarationParserRuleCall_3_1_0()); }
	ruleConstantDeclaration{ after(grammarAccess.getProcessAccess().getConstantsDecConstantDeclarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__StateDeclarationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getStateDeclarationStateDeclarationParserRuleCall_4_0()); }
	ruleStateDeclaration{ after(grammarAccess.getProcessAccess().getStateDeclarationStateDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__AssertionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getAssertionsAssertionParserRuleCall_5_1_0()); }
	ruleAssertion{ after(grammarAccess.getProcessAccess().getAssertionsAssertionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__AssertionsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getAssertionsAssertionParserRuleCall_5_2_1_0()); }
	ruleAssertion{ after(grammarAccess.getProcessAccess().getAssertionsAssertionParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__TransitionsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTransitionsTransitionParserRuleCall_7_0()); }
	ruleTransition{ after(grammarAccess.getProcessAccess().getTransitionsTransitionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__TransitionsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getTransitionsTransitionParserRuleCall_8_1_0()); }
	ruleTransition{ after(grammarAccess.getProcessAccess().getTransitionsTransitionParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__StatesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getStatesStateParserRuleCall_1_0()); }
	ruleState{ after(grammarAccess.getStateDeclarationAccess().getStatesStateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__StatesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getStatesStateParserRuleCall_2_1_0()); }
	ruleState{ after(grammarAccess.getStateDeclarationAccess().getStatesStateParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__InitStateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getInitStateStateCrossReference_5_0()); }
(
{ before(grammarAccess.getStateDeclarationAccess().getInitStateStateIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getInitStateStateIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getStateDeclarationAccess().getInitStateStateCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__AcceptStatesAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateCrossReference_7_1_0()); }
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__AcceptStatesAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateCrossReference_7_2_1_0()); }
(
{ before(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateIDTerminalRuleCall_7_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateIDTerminalRuleCall_7_2_1_0_1()); }
)
{ after(grammarAccess.getStateDeclarationAccess().getAcceptStatesStateCrossReference_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__CommitStatesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitStatesStateCrossReference_8_1_0()); }
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitStatesStateIDTerminalRuleCall_8_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getCommitStatesStateIDTerminalRuleCall_8_1_0_1()); }
)
{ after(grammarAccess.getStateDeclarationAccess().getCommitStatesStateCrossReference_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__CommitStatesAssignment_8_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitStatesStateCrossReference_8_2_1_0()); }
(
{ before(grammarAccess.getStateDeclarationAccess().getCommitStatesStateIDTerminalRuleCall_8_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getCommitStatesStateIDTerminalRuleCall_8_2_1_0_1()); }
)
{ after(grammarAccess.getStateDeclarationAccess().getCommitStatesStateCrossReference_8_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__StateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionAccess().getStateStateCrossReference_0_0()); }
(
{ before(grammarAccess.getAssertionAccess().getStateStateIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssertionAccess().getStateStateIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssertionAccess().getStateStateCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssertionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SrcAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSrcStateCrossReference_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getSrcStateIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getSrcStateIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getSrcStateCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DestAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDestStateCrossReference_2_0()); }
(
{ before(grammarAccess.getTransitionAccess().getDestStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getDestStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getDestStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GuardAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardGuardParserRuleCall_4_0_0()); }
	ruleGuard{ after(grammarAccess.getTransitionAccess().getGuardGuardParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SyncAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSyncSyncParserRuleCall_5_0_0()); }
	ruleSync{ after(grammarAccess.getTransitionAccess().getSyncSyncParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectEffectParserRuleCall_6_0_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectEffectParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getGuardAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Send__ChannelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getChannelChannelCrossReference_1_0()); }
(
{ before(grammarAccess.getSendAccess().getChannelChannelIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSendAccess().getChannelChannelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSendAccess().getChannelChannelCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Send__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSendAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recv__ChannelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecvAccess().getChannelChannelCrossReference_1_0()); }
(
{ before(grammarAccess.getRecvAccess().getChannelChannelIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRecvAccess().getChannelChannelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRecvAccess().getChannelChannelCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recv__VarRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecvAccess().getVarRefVarAccessParserRuleCall_3_0()); }
	ruleVarAccess{ after(grammarAccess.getRecvAccess().getVarRefVarAccessParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__AssignmentsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAssignmentsAssignParserRuleCall_1_0()); }
	ruleAssign{ after(grammarAccess.getEffectAccess().getAssignmentsAssignParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__AssignmentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAssignmentsAssignParserRuleCall_2_1_0()); }
	ruleAssign{ after(grammarAccess.getEffectAccess().getAssignmentsAssignParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__VarRefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getVarRefVarAccessParserRuleCall_0_0()); }
	ruleVarAccess{ after(grammarAccess.getAssignAccess().getVarRefVarAccessParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_0_1_0()); }
(rule__BooleanExpression__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getRightOrAndXorParserRuleCall_1_1_0()); }
	ruleOrAndXor{ after(grammarAccess.getBooleanExpressionAccess().getRightOrAndXorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getOpAlternatives_1_0_1_0()); }
(rule__OrAndXor__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getOrAndXorAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndXor__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndXorAccess().getRightComparisonParserRuleCall_1_1_0()); }
	ruleComparison{ after(grammarAccess.getOrAndXorAccess().getRightComparisonParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0()); }
(rule__Comparison__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightShiftParserRuleCall_1_1_0()); }
	ruleShift{ after(grammarAccess.getComparisonAccess().getRightShiftParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getOpAlternatives_1_0_1_0()); }
(rule__Shift__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getShiftAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftAccess().getRightAdditionParserRuleCall_1_1_0()); }
	ruleAddition{ after(grammarAccess.getShiftAccess().getRightAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_0_1_0()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); }
(
{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); }
)

{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
(rule__Multiplication__OpAlternatives_1_0_1_0)
{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightPrefixedParserRuleCall_1_1_0()); }
	rulePrefixed{ after(grammarAccess.getMultiplicationAccess().getRightPrefixedParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__ExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_0_2_0()); }
	ruleAtomic{ after(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_1_2_0()); }
	ruleAtomic{ after(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefixed__ExpressionAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_2_2_0()); }
	ruleAtomic{ after(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0()); }
(rule__Atomic__ValueAlternatives_3_1_0)
{ after(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__RefAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRefReferenceCrossReference_4_1_0()); }
(
{ before(grammarAccess.getAtomicAccess().getRefReferenceIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAtomicAccess().getRefReferenceIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getAtomicAccess().getRefReferenceCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__RefAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRefArrayVarAccessParserRuleCall_5_1_0()); }
	ruleArrayVarAccess{ after(grammarAccess.getAtomicAccess().getRefArrayVarAccessParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__RefAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRefProcessStateAccessParserRuleCall_6_1_0()); }
	ruleProcessStateAccess{ after(grammarAccess.getAtomicAccess().getRefProcessStateAccessParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__ReferencedVarAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableRefAccess().getReferencedVarVariableCrossReference_0()); }
(
{ before(grammarAccess.getVariableRefAccess().getReferencedVarVariableIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableRefAccess().getReferencedVarVariableIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableRefAccess().getReferencedVarVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarAccess__PrefixAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVarAccessAccess().getPrefixArrayCrossReference_0_0()); }
(
{ before(grammarAccess.getArrayVarAccessAccess().getPrefixArrayIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getArrayVarAccessAccess().getPrefixArrayIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getArrayVarAccessAccess().getPrefixArrayCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarAccess__IndexAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayVarAccessAccess().getIndexExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getArrayVarAccessAccess().getIndexExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStateAccess__ProcessAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessStateAccessAccess().getProcessProcessCrossReference_0_0()); }
(
{ before(grammarAccess.getProcessStateAccessAccess().getProcessProcessIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getProcessStateAccessAccess().getProcessProcessIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getProcessStateAccessAccess().getProcessProcessCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStateAccess__StateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessStateAccessAccess().getStateStateCrossReference_2_0()); }
(
{ before(grammarAccess.getProcessStateAccessAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getProcessStateAccessAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getProcessStateAccessAccess().getStateStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemType__SystemTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemTypeAccess().getSystemTypeAlternatives_1_0()); }
(rule__SystemType__SystemTypeAlternatives_1_0)
{ after(grammarAccess.getSystemTypeAccess().getSystemTypeAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


