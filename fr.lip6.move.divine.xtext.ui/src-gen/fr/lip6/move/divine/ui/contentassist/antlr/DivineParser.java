/*
* generated by Xtext
*/
package fr.lip6.move.divine.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.lip6.move.divine.services.DivineGrammarAccess;

public class DivineParser extends AbstractContentAssistParser {
	
	@Inject
	private DivineGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.lip6.move.divine.ui.contentassist.antlr.internal.InternalDivineParser createParser() {
		fr.lip6.move.divine.ui.contentassist.antlr.internal.InternalDivineParser result = new fr.lip6.move.divine.ui.contentassist.antlr.internal.InternalDivineParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDivineSpecificationAccess().getAlternatives_0(), "rule__DivineSpecification__Alternatives_0");
					put(grammarAccess.getConstantDeclarationAccess().getTypeAlternatives_1_0(), "rule__ConstantDeclaration__TypeAlternatives_1_0");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAlternatives_0_0(), "rule__VariableDeclaration__TypeAlternatives_0_0");
					put(grammarAccess.getVariableDeclarationAccess().getAlternatives_1(), "rule__VariableDeclaration__Alternatives_1");
					put(grammarAccess.getVariableDeclarationAccess().getAlternatives_2_1(), "rule__VariableDeclaration__Alternatives_2_1");
					put(grammarAccess.getProcessAccess().getAlternatives_3(), "rule__Process__Alternatives_3");
					put(grammarAccess.getSyncAccess().getAlternatives(), "rule__Sync__Alternatives");
					put(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_0_1_0(), "rule__BooleanExpression__OpAlternatives_1_0_1_0");
					put(grammarAccess.getOrAndXorAccess().getOpAlternatives_1_0_1_0(), "rule__OrAndXor__OpAlternatives_1_0_1_0");
					put(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0(), "rule__Comparison__OpAlternatives_1_0_1_0");
					put(grammarAccess.getShiftAccess().getOpAlternatives_1_0_1_0(), "rule__Shift__OpAlternatives_1_0_1_0");
					put(grammarAccess.getAdditionAccess().getAlternatives_1_0(), "rule__Addition__Alternatives_1_0");
					put(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0(), "rule__Multiplication__OpAlternatives_1_0_1_0");
					put(grammarAccess.getPrefixedAccess().getAlternatives(), "rule__Prefixed__Alternatives");
					put(grammarAccess.getPrefixedAccess().getAlternatives_0_1_0(), "rule__Prefixed__Alternatives_0_1_0");
					put(grammarAccess.getAtomicAccess().getAlternatives(), "rule__Atomic__Alternatives");
					put(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0(), "rule__Atomic__ValueAlternatives_3_1_0");
					put(grammarAccess.getReferenceAccess().getAlternatives(), "rule__Reference__Alternatives");
					put(grammarAccess.getVarAccessAccess().getAlternatives(), "rule__VarAccess__Alternatives");
					put(grammarAccess.getSystemTypeAccess().getSystemTypeAlternatives_1_0(), "rule__SystemType__SystemTypeAlternatives_1_0");
					put(grammarAccess.getDivineSpecificationAccess().getGroup(), "rule__DivineSpecification__Group__0");
					put(grammarAccess.getConstantDeclarationAccess().getGroup(), "rule__ConstantDeclaration__Group__0");
					put(grammarAccess.getConstantDeclarationAccess().getGroup_3(), "rule__ConstantDeclaration__Group_3__0");
					put(grammarAccess.getConstantAccess().getGroup(), "rule__Constant__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_2(), "rule__VariableDeclaration__Group_2__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getVariableAccess().getGroup_1(), "rule__Variable__Group_1__0");
					put(grammarAccess.getArrayAccess().getGroup(), "rule__Array__Group__0");
					put(grammarAccess.getArrayAccess().getGroup_4(), "rule__Array__Group_4__0");
					put(grammarAccess.getArrayAccess().getGroup_4_3(), "rule__Array__Group_4_3__0");
					put(grammarAccess.getChannelDeclarationAccess().getGroup(), "rule__ChannelDeclaration__Group__0");
					put(grammarAccess.getChannelDeclarationAccess().getGroup_2(), "rule__ChannelDeclaration__Group_2__0");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getProcessAccess().getGroup_5(), "rule__Process__Group_5__0");
					put(grammarAccess.getProcessAccess().getGroup_5_2(), "rule__Process__Group_5_2__0");
					put(grammarAccess.getProcessAccess().getGroup_8(), "rule__Process__Group_8__0");
					put(grammarAccess.getStateDeclarationAccess().getGroup(), "rule__StateDeclaration__Group__0");
					put(grammarAccess.getStateDeclarationAccess().getGroup_2(), "rule__StateDeclaration__Group_2__0");
					put(grammarAccess.getStateDeclarationAccess().getGroup_7(), "rule__StateDeclaration__Group_7__0");
					put(grammarAccess.getStateDeclarationAccess().getGroup_7_2(), "rule__StateDeclaration__Group_7_2__0");
					put(grammarAccess.getStateDeclarationAccess().getGroup_8(), "rule__StateDeclaration__Group_8__0");
					put(grammarAccess.getStateDeclarationAccess().getGroup_8_2(), "rule__StateDeclaration__Group_8_2__0");
					put(grammarAccess.getAssertionAccess().getGroup(), "rule__Assertion__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_5(), "rule__Transition__Group_5__0");
					put(grammarAccess.getTransitionAccess().getGroup_6(), "rule__Transition__Group_6__0");
					put(grammarAccess.getGuardAccess().getGroup(), "rule__Guard__Group__0");
					put(grammarAccess.getSendAccess().getGroup(), "rule__Send__Group__0");
					put(grammarAccess.getRecvAccess().getGroup(), "rule__Recv__Group__0");
					put(grammarAccess.getEffectAccess().getGroup(), "rule__Effect__Group__0");
					put(grammarAccess.getEffectAccess().getGroup_2(), "rule__Effect__Group_2__0");
					put(grammarAccess.getAssignAccess().getGroup(), "rule__Assign__Group__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup(), "rule__BooleanExpression__Group__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup_1(), "rule__BooleanExpression__Group_1__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup_1_0(), "rule__BooleanExpression__Group_1_0__0");
					put(grammarAccess.getOrAndXorAccess().getGroup(), "rule__OrAndXor__Group__0");
					put(grammarAccess.getOrAndXorAccess().getGroup_1(), "rule__OrAndXor__Group_1__0");
					put(grammarAccess.getOrAndXorAccess().getGroup_1_0(), "rule__OrAndXor__Group_1_0__0");
					put(grammarAccess.getComparisonAccess().getGroup(), "rule__Comparison__Group__0");
					put(grammarAccess.getComparisonAccess().getGroup_1(), "rule__Comparison__Group_1__0");
					put(grammarAccess.getComparisonAccess().getGroup_1_0(), "rule__Comparison__Group_1_0__0");
					put(grammarAccess.getShiftAccess().getGroup(), "rule__Shift__Group__0");
					put(grammarAccess.getShiftAccess().getGroup_1(), "rule__Shift__Group_1__0");
					put(grammarAccess.getShiftAccess().getGroup_1_0(), "rule__Shift__Group_1_0__0");
					put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
					put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_0(), "rule__Addition__Group_1_0_0__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_1(), "rule__Addition__Group_1_0_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1_0(), "rule__Multiplication__Group_1_0__0");
					put(grammarAccess.getPrefixedAccess().getGroup_0(), "rule__Prefixed__Group_0__0");
					put(grammarAccess.getPrefixedAccess().getGroup_0_1(), "rule__Prefixed__Group_0_1__0");
					put(grammarAccess.getPrefixedAccess().getGroup_1(), "rule__Prefixed__Group_1__0");
					put(grammarAccess.getPrefixedAccess().getGroup_2(), "rule__Prefixed__Group_2__0");
					put(grammarAccess.getAtomicAccess().getGroup_0(), "rule__Atomic__Group_0__0");
					put(grammarAccess.getAtomicAccess().getGroup_1(), "rule__Atomic__Group_1__0");
					put(grammarAccess.getAtomicAccess().getGroup_2(), "rule__Atomic__Group_2__0");
					put(grammarAccess.getAtomicAccess().getGroup_3(), "rule__Atomic__Group_3__0");
					put(grammarAccess.getAtomicAccess().getGroup_4(), "rule__Atomic__Group_4__0");
					put(grammarAccess.getAtomicAccess().getGroup_5(), "rule__Atomic__Group_5__0");
					put(grammarAccess.getAtomicAccess().getGroup_6(), "rule__Atomic__Group_6__0");
					put(grammarAccess.getArrayVarAccessAccess().getGroup(), "rule__ArrayVarAccess__Group__0");
					put(grammarAccess.getProcessStateAccessAccess().getGroup(), "rule__ProcessStateAccess__Group__0");
					put(grammarAccess.getSystemTypeAccess().getGroup(), "rule__SystemType__Group__0");
					put(grammarAccess.getDivineSpecificationAccess().getVariablesDeclAssignment_0_0(), "rule__DivineSpecification__VariablesDeclAssignment_0_0");
					put(grammarAccess.getDivineSpecificationAccess().getConstantsDeclAssignment_0_1(), "rule__DivineSpecification__ConstantsDeclAssignment_0_1");
					put(grammarAccess.getDivineSpecificationAccess().getChannelsDeclAssignment_0_2(), "rule__DivineSpecification__ChannelsDeclAssignment_0_2");
					put(grammarAccess.getDivineSpecificationAccess().getProcessesAssignment_1(), "rule__DivineSpecification__ProcessesAssignment_1");
					put(grammarAccess.getDivineSpecificationAccess().getSystemTypeAssignment_2(), "rule__DivineSpecification__SystemTypeAssignment_2");
					put(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1(), "rule__ConstantDeclaration__TypeAssignment_1");
					put(grammarAccess.getConstantDeclarationAccess().getConstantsAssignment_2(), "rule__ConstantDeclaration__ConstantsAssignment_2");
					put(grammarAccess.getConstantDeclarationAccess().getConstantsAssignment_3_1(), "rule__ConstantDeclaration__ConstantsAssignment_3_1");
					put(grammarAccess.getConstantAccess().getNameAssignment_0(), "rule__Constant__NameAssignment_0");
					put(grammarAccess.getConstantAccess().getInitValueAssignment_2(), "rule__Constant__InitValueAssignment_2");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0(), "rule__VariableDeclaration__TypeAssignment_0");
					put(grammarAccess.getVariableDeclarationAccess().getVariablesAssignment_1_0(), "rule__VariableDeclaration__VariablesAssignment_1_0");
					put(grammarAccess.getVariableDeclarationAccess().getArraysAssignment_1_1(), "rule__VariableDeclaration__ArraysAssignment_1_1");
					put(grammarAccess.getVariableDeclarationAccess().getVariablesAssignment_2_1_0(), "rule__VariableDeclaration__VariablesAssignment_2_1_0");
					put(grammarAccess.getVariableDeclarationAccess().getArraysAssignment_2_1_1(), "rule__VariableDeclaration__ArraysAssignment_2_1_1");
					put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
					put(grammarAccess.getVariableAccess().getInitValueAssignment_1_1(), "rule__Variable__InitValueAssignment_1_1");
					put(grammarAccess.getArrayAccess().getNameAssignment_0(), "rule__Array__NameAssignment_0");
					put(grammarAccess.getArrayAccess().getSizeAssignment_2(), "rule__Array__SizeAssignment_2");
					put(grammarAccess.getArrayAccess().getInitValueAssignment_4_2(), "rule__Array__InitValueAssignment_4_2");
					put(grammarAccess.getArrayAccess().getInitValueAssignment_4_3_1(), "rule__Array__InitValueAssignment_4_3_1");
					put(grammarAccess.getChannelDeclarationAccess().getChannelsAssignment_1(), "rule__ChannelDeclaration__ChannelsAssignment_1");
					put(grammarAccess.getChannelDeclarationAccess().getChannelsAssignment_2_1(), "rule__ChannelDeclaration__ChannelsAssignment_2_1");
					put(grammarAccess.getChannelAccess().getNameAssignment(), "rule__Channel__NameAssignment");
					put(grammarAccess.getProcessAccess().getNameAssignment_1(), "rule__Process__NameAssignment_1");
					put(grammarAccess.getProcessAccess().getVariablesDecAssignment_3_0(), "rule__Process__VariablesDecAssignment_3_0");
					put(grammarAccess.getProcessAccess().getConstantsDecAssignment_3_1(), "rule__Process__ConstantsDecAssignment_3_1");
					put(grammarAccess.getProcessAccess().getStateDeclarationAssignment_4(), "rule__Process__StateDeclarationAssignment_4");
					put(grammarAccess.getProcessAccess().getAssertionsAssignment_5_1(), "rule__Process__AssertionsAssignment_5_1");
					put(grammarAccess.getProcessAccess().getAssertionsAssignment_5_2_1(), "rule__Process__AssertionsAssignment_5_2_1");
					put(grammarAccess.getProcessAccess().getTransitionsAssignment_7(), "rule__Process__TransitionsAssignment_7");
					put(grammarAccess.getProcessAccess().getTransitionsAssignment_8_1(), "rule__Process__TransitionsAssignment_8_1");
					put(grammarAccess.getStateDeclarationAccess().getStatesAssignment_1(), "rule__StateDeclaration__StatesAssignment_1");
					put(grammarAccess.getStateDeclarationAccess().getStatesAssignment_2_1(), "rule__StateDeclaration__StatesAssignment_2_1");
					put(grammarAccess.getStateDeclarationAccess().getInitStateAssignment_5(), "rule__StateDeclaration__InitStateAssignment_5");
					put(grammarAccess.getStateDeclarationAccess().getAcceptStatesAssignment_7_1(), "rule__StateDeclaration__AcceptStatesAssignment_7_1");
					put(grammarAccess.getStateDeclarationAccess().getAcceptStatesAssignment_7_2_1(), "rule__StateDeclaration__AcceptStatesAssignment_7_2_1");
					put(grammarAccess.getStateDeclarationAccess().getCommitStatesAssignment_8_1(), "rule__StateDeclaration__CommitStatesAssignment_8_1");
					put(grammarAccess.getStateDeclarationAccess().getCommitStatesAssignment_8_2_1(), "rule__StateDeclaration__CommitStatesAssignment_8_2_1");
					put(grammarAccess.getStateAccess().getNameAssignment(), "rule__State__NameAssignment");
					put(grammarAccess.getAssertionAccess().getStateAssignment_0(), "rule__Assertion__StateAssignment_0");
					put(grammarAccess.getAssertionAccess().getExpressionAssignment_2(), "rule__Assertion__ExpressionAssignment_2");
					put(grammarAccess.getTransitionAccess().getSrcAssignment_0(), "rule__Transition__SrcAssignment_0");
					put(grammarAccess.getTransitionAccess().getDestAssignment_2(), "rule__Transition__DestAssignment_2");
					put(grammarAccess.getTransitionAccess().getGuardAssignment_4_0(), "rule__Transition__GuardAssignment_4_0");
					put(grammarAccess.getTransitionAccess().getSyncAssignment_5_0(), "rule__Transition__SyncAssignment_5_0");
					put(grammarAccess.getTransitionAccess().getEffectAssignment_6_0(), "rule__Transition__EffectAssignment_6_0");
					put(grammarAccess.getGuardAccess().getExpressionAssignment_1(), "rule__Guard__ExpressionAssignment_1");
					put(grammarAccess.getSendAccess().getChannelAssignment_1(), "rule__Send__ChannelAssignment_1");
					put(grammarAccess.getSendAccess().getExpressionAssignment_3(), "rule__Send__ExpressionAssignment_3");
					put(grammarAccess.getRecvAccess().getChannelAssignment_1(), "rule__Recv__ChannelAssignment_1");
					put(grammarAccess.getRecvAccess().getVarRefAssignment_3(), "rule__Recv__VarRefAssignment_3");
					put(grammarAccess.getEffectAccess().getAssignmentsAssignment_1(), "rule__Effect__AssignmentsAssignment_1");
					put(grammarAccess.getEffectAccess().getAssignmentsAssignment_2_1(), "rule__Effect__AssignmentsAssignment_2_1");
					put(grammarAccess.getAssignAccess().getVarRefAssignment_0(), "rule__Assign__VarRefAssignment_0");
					put(grammarAccess.getAssignAccess().getExpressionAssignment_2(), "rule__Assign__ExpressionAssignment_2");
					put(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_0_1(), "rule__BooleanExpression__OpAssignment_1_0_1");
					put(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_1(), "rule__BooleanExpression__RightAssignment_1_1");
					put(grammarAccess.getOrAndXorAccess().getOpAssignment_1_0_1(), "rule__OrAndXor__OpAssignment_1_0_1");
					put(grammarAccess.getOrAndXorAccess().getRightAssignment_1_1(), "rule__OrAndXor__RightAssignment_1_1");
					put(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1(), "rule__Comparison__OpAssignment_1_0_1");
					put(grammarAccess.getComparisonAccess().getRightAssignment_1_1(), "rule__Comparison__RightAssignment_1_1");
					put(grammarAccess.getShiftAccess().getOpAssignment_1_0_1(), "rule__Shift__OpAssignment_1_0_1");
					put(grammarAccess.getShiftAccess().getRightAssignment_1_1(), "rule__Shift__RightAssignment_1_1");
					put(grammarAccess.getAdditionAccess().getOpAssignment_1_0_0_1(), "rule__Addition__OpAssignment_1_0_0_1");
					put(grammarAccess.getAdditionAccess().getOpAssignment_1_0_1_1(), "rule__Addition__OpAssignment_1_0_1_1");
					put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
					put(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1(), "rule__Multiplication__OpAssignment_1_0_1");
					put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1(), "rule__Multiplication__RightAssignment_1_1");
					put(grammarAccess.getPrefixedAccess().getExpressionAssignment_0_2(), "rule__Prefixed__ExpressionAssignment_0_2");
					put(grammarAccess.getPrefixedAccess().getExpressionAssignment_1_2(), "rule__Prefixed__ExpressionAssignment_1_2");
					put(grammarAccess.getPrefixedAccess().getExpressionAssignment_2_2(), "rule__Prefixed__ExpressionAssignment_2_2");
					put(grammarAccess.getAtomicAccess().getValueAssignment_1_1(), "rule__Atomic__ValueAssignment_1_1");
					put(grammarAccess.getAtomicAccess().getValueAssignment_2_1(), "rule__Atomic__ValueAssignment_2_1");
					put(grammarAccess.getAtomicAccess().getValueAssignment_3_1(), "rule__Atomic__ValueAssignment_3_1");
					put(grammarAccess.getAtomicAccess().getRefAssignment_4_1(), "rule__Atomic__RefAssignment_4_1");
					put(grammarAccess.getAtomicAccess().getRefAssignment_5_1(), "rule__Atomic__RefAssignment_5_1");
					put(grammarAccess.getAtomicAccess().getRefAssignment_6_1(), "rule__Atomic__RefAssignment_6_1");
					put(grammarAccess.getVariableRefAccess().getReferencedVarAssignment(), "rule__VariableRef__ReferencedVarAssignment");
					put(grammarAccess.getArrayVarAccessAccess().getPrefixAssignment_0(), "rule__ArrayVarAccess__PrefixAssignment_0");
					put(grammarAccess.getArrayVarAccessAccess().getIndexAssignment_2(), "rule__ArrayVarAccess__IndexAssignment_2");
					put(grammarAccess.getProcessStateAccessAccess().getProcessAssignment_0(), "rule__ProcessStateAccess__ProcessAssignment_0");
					put(grammarAccess.getProcessStateAccessAccess().getStateAssignment_2(), "rule__ProcessStateAccess__StateAssignment_2");
					put(grammarAccess.getSystemTypeAccess().getSystemTypeAssignment_1(), "rule__SystemType__SystemTypeAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.lip6.move.divine.ui.contentassist.antlr.internal.InternalDivineParser typedParser = (fr.lip6.move.divine.ui.contentassist.antlr.internal.InternalDivineParser) parser;
			typedParser.entryRuleDivineSpecification();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DivineGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DivineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
