/*
 * generated by Xtext
 */
package fr.lip6.move.ui.outline;

import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;

import fr.lip6.move.gal.ArrayPrefix;
import fr.lip6.move.gal.Assignment;
import fr.lip6.move.gal.Constant;
import fr.lip6.move.gal.GalPackage;
import fr.lip6.move.gal.Transition;
import fr.lip6.move.gal.True;
import fr.lip6.move.gal.UnaryMinus;
import fr.lip6.move.gal.Variable;

/** Customization of the default outline structure.
 * 
 * Added description for other AST elements in Gal structure.
 *
 */
public class GalOutlineTreeProvider extends DefaultOutlineTreeProvider {

	
	public boolean _isLeaf(UnaryMinus e)
	{
		if(e.getValue() instanceof Constant)
			return true ;
		
		return false;
	}
	public boolean isLeaf(Assignment ass) {
		return true;
	}
	
	public boolean _isLeaf(Variable e)
	{ return true; }
	public boolean _isLeaf(ArrayPrefix e)
	{ return true; }
	
	protected void _createChildren (IOutlineNode node, Transition tr) {
		if (tr.getLabel() != null)
			createEStructuralFeatureNode(node, tr, GalPackage.Literals.TRANSITION__LABEL, null, labelProvider.getText(tr.getLabel()), true);
		
		if (! (tr.getGuard() instanceof True ))
			createEStructuralFeatureNode(node, tr, GalPackage.Literals.TRANSITION__GUARD, null, "guard [" + labelProvider.getText(tr.getGuard())+ "]", true);
		
		if (! tr.getActions().isEmpty() ) {
			createEStructuralFeatureNode(node, tr, GalPackage.Literals.TRANSITION__ACTIONS, null, "body", false);
		}
		
	}
	
	
	

}