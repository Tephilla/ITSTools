/* ProMeLa Program Daisy2 */
/* Timeouts are:
*/
/* User UserTypes: */

typedef commande_t{
  int dest;/* index: -6 */
  int type;/* index: -7 */
  int dir;/* index: -8 */
  int lg0;/* index: -9 */
  int lg1;/* index: -10 */
  int lg2;/* index: -11 */
}

typedef req_t{
  commande_t cde;/* index: -12 */
  int src;/* index: -13 */
  int answer;/* index: -14 */
  int free;/* index: -15 */
}

typedef data_t{
  int type_dest;/* index: -16 */
  int id_dest;/* index: -17 */
  int lg0;/* index: -18 */
  int lg1;/* index: -19 */
  int lg2;/* index: -20 */
  int free;/* index: -21 */
}


/* Global Variables and Channels: */
int nb_req = 0;/* index: -22 */
chan P1_data_out = [1] of {data_t};/* index: -23 */
chan P1_req_out = [1] of {req_t};/* index: -24 */
chan P2_data_out = [1] of {data_t};/* index: -25 */
chan P2_req_out = [1] of {req_t};/* index: -26 */
chan WM1_data_out = [1] of {data_t};/* index: -27 */
chan WM1_req_out = [1] of {req_t};/* index: -28 */
chan WM1_from_task = [1] of {commande_t};/* index: -29 */
chan WM1_to_task = [1] of {commande_t};/* index: -30 */
chan WM2_data_out = [1] of {data_t};/* index: -31 */
chan WM2_req_out = [1] of {req_t};/* index: -32 */
chan WM2_from_task = [1] of {commande_t};/* index: -33 */
chan WM2_to_task = [1] of {commande_t};/* index: -34 */
chan WS1_data_out = [1] of {data_t};/* index: -35 */
chan WS1_req_out = [1] of {req_t};/* index: -36 */
chan WS1_from_task = [1] of {commande_t};/* index: -37 */
chan WS1_to_task = [1] of {commande_t};/* index: -38 */
chan WS2_data_out = [1] of {data_t};/* index: -39 */
chan WS2_req_out = [1] of {req_t};/* index: -40 */
chan WS2_from_task = [1] of {commande_t};/* index: -41 */
chan WS2_to_task = [1] of {commande_t};/* index: -42 */

/* Processes: */
active [1] proctype Pipe0() { /* index: -53 */
  data_t data;/* index: -44 */
  req_t req;/* index: -45 */
/* global variables dependences
  chan P1_data_out = [1] of {data_t};/* index: -23 */
  chan P1_req_out = [1] of {req_t};/* index: -24 */
  chan WS2_data_out = [1] of {data_t};/* index: -39 */
  chan WS2_req_out = [1] of {req_t};/* index: -40 */
no more global variables dependences code is...*/

  [0->8]	{
[0->4]	    atomic {
      [0->4]	{
[0->1]	        v-44.v-21 = 1;
[1->2]	        v-45.v-15 = 1;
[2->3]	        v-23!v-44;
[3->4]	        v-24!v-45;
      [0->4]	}
[0->4]	    }

[4->4]	    progress:
[4->8]	    do
		    ::
      [4->4]	{
[4->6]	        atomic {
          [4->6]	{
[4->5]	            v-39?v-44;
[5->6]	            v-40?v-45;
          [4->6]	}
[4->6]	        }

[6->4]	        atomic {
          [6->4]	{
[6->7]	            v-23!v-44;
[7->4]	            v-24!v-45;
          [6->4]	}
[6->4]	        }

[8->4]	        /*end;*/
      [4->4]	}

[4->8]	    od;

  [0->8]	}

}

active [1] proctype Pipe1() { /* index: -54 */
  data_t data;/* index: -44 */
  req_t req;/* index: -45 */
/* global variables dependences
  chan P2_data_out = [1] of {data_t};/* index: -25 */
  chan P2_req_out = [1] of {req_t};/* index: -26 */
  chan WM1_data_out = [1] of {data_t};/* index: -27 */
  chan WM1_req_out = [1] of {req_t};/* index: -28 */
no more global variables dependences code is...*/

  [0->8]	{
[0->4]	    atomic {
      [0->4]	{
[0->1]	        v-44.v-21 = 1;
[1->2]	        v-45.v-15 = 1;
[2->3]	        v-25!v-44;
[3->4]	        v-26!v-45;
      [0->4]	}
[0->4]	    }

[4->4]	    progress:
[4->8]	    do
		    ::
      [4->4]	{
[4->6]	        atomic {
          [4->6]	{
[4->5]	            v-27?v-44;
[5->6]	            v-28?v-45;
          [4->6]	}
[4->6]	        }

[6->4]	        atomic {
          [6->4]	{
[6->7]	            v-25!v-44;
[7->4]	            v-26!v-45;
          [6->4]	}
[6->4]	        }

[8->4]	        /*end;*/
      [4->4]	}

[4->8]	    od;

  [0->8]	}

}

active [1] proctype WrapperMaitre0() { /* index: -55 */
  data_t data;/* index: -44 */
  req_t req;/* index: -45 */
  int type;/* index: -46 */
  int dir;/* index: -47 */
  int dest;/* index: -48 */
  int lg;/* index: -49 */
  int cpt;/* index: -50 */
/* global variables dependences
  chan WM1_from_task = [1] of {commande_t};/* index: -29 */
  chan P1_data_out = [1] of {data_t};/* index: -23 */
  chan P1_req_out = [1] of {req_t};/* index: -24 */
  chan WM1_data_out = [1] of {data_t};/* index: -27 */
  chan WM1_req_out = [1] of {req_t};/* index: -28 */
  chan WM1_to_task = [1] of {commande_t};/* index: -30 */
no more global variables dependences code is...*/

  [0->75]	{
[0->0]	    debut:
[0->75]	    do
		    ::
      [0->0]	{
[0->1]	        ((empty(v-29)));
[1->3]	        atomic {
          [1->3]	{
[1->2]	            v-23?v-44;
[2->3]	            v-24?v-45;
          [1->3]	}
[1->3]	        }

[3->0]	        atomic {
          [3->0]	{
[3->4]	            v-27!v-44;
[4->0]	            v-28!v-45;
          [3->0]	}
[3->0]	        }

[5->0]	        /*end;*/
      [0->0]	}

		    ::
      [0->0]	{
[0->6]	        ((!(empty(v-29))));
[6->6]	        debut_req:
[6->12]	        do
		        ::
          [6->6]	{
[6->8]	            atomic {
              [6->8]	{
[6->7]	                v-23?v-44;
[7->8]	                v-24?v-45;
              [6->8]	}
[6->8]	            }

[8->6]	            if
		            ::
              [8->6]	{
[8->12]	                ((v-45.v-15==1));
[9->12]	                break;
[9->6]	                /*end;*/
              [8->6]	}

		            ::
              [8->6]	{
[8->10]	                ((v-45.v-15!=1));
[10->6]	                atomic {
                  [10->6]	{
[10->11]	                    v-27!v-44;
[11->6]	                    v-28!v-45;
                  [10->6]	}
[10->6]	                }

[12->6]	                /*end;*/
              [8->6]	}

[8->6]	            fi;

[12->6]	            /*end;*/
          [6->6]	}

[6->12]	        od;

[12->22]	        atomic {
          [12->22]	{
[12->13]	            v-29?v-45.v-12;
[13->14]	            v-45.v-14 = 0;
[14->15]	            v-45.v-15 = 0;
[15->16]	            v-45.v-13 = 0;
[16->17]	            v-46 = v-45.v-12.v-7;
[17->18]	            v-47 = v-45.v-12.v-8;
[18->19]	            v-49 = (((v-45.v-12.v-11*4)+(v-45.v-12.v-10*2))+v-45.v-12.v-9);
[19->20]	            v-48 = v-45.v-12.v-6;
[20->21]	            v-27!v-44;
[21->22]	            v-28!v-45;
          [12->22]	}
[12->22]	        }

[22->28]	        do
		        ::
          [22->22]	{
[22->24]	            atomic {
              [22->24]	{
[22->23]	                v-23?v-44;
[23->24]	                v-24?v-45;
              [22->24]	}
[22->24]	            }

[24->22]	            if
		            ::
              [24->22]	{
[24->28]	                ((((!v-45.v-15)&&v-45.v-14)&&(v-45.v-13==0)));
[25->28]	                break;
[25->22]	                /*end;*/
              [24->22]	}

		            ::
              [24->22]	{
[24->26]	                else ->
[26->22]	                atomic {
                  [26->22]	{
[26->27]	                    v-27!v-44;
[27->22]	                    v-28!v-45;
                  [26->22]	}
[26->22]	                }

[28->22]	                /*end;*/
              [24->22]	}

[24->22]	            fi;

[28->22]	            /*end;*/
          [22->22]	}

[22->28]	        od;

[28->31]	        atomic {
          [28->31]	{
[28->29]	            v-45.v-15 = 1;
[29->30]	            v-27!v-44;
[30->31]	            v-28!v-45;
          [28->31]	}
[28->31]	        }

[31->75]	        if
		        ::
          [31->75]	{
[31->0]	            ((v-46==0));
[32->75]	            goto debut;
[32->75]	            /*end;*/
          [31->75]	}

		        ::
          [31->75]	{
[31->33]	            else ->
[33->47]	            if
		            ::
              [33->47]	{
[33->34]	                ((v-47==0));
[34->35]	                v-50 = 0;
[35->47]	                do
		                ::
                  [35->35]	{
[35->36]	                    (((v-50<v-49)||((v-49==0)&&(v-50==0))));
[36->38]	                    atomic {
                      [36->38]	{
[36->37]	                        v-23?v-44;
[37->38]	                        v-24?v-45;
                      [36->38]	}
[36->38]	                    }

[38->43]	                    if
		                    ::
                      [38->43]	{
[38->39]	                        (((((!v-44.v-21)&&(((v-44.v-18+(v-44.v-19*2))+(v-44.v-20*4))==(v-50+1)))&&(v-44.v-16==0))&&(v-44.v-17==0)));
[39->43]	                        atomic {
                          [39->43]	{
[39->40]	                            v-30!v-45.v-12;
[40->41]	                            v-50 = (v-50+1);
[41->43]	                            v-44.v-21 = 1;
                          [39->43]	}
[39->43]	                        }

[42->43]	                        /*end;*/
                      [38->43]	}

		                    ::
                      [38->43]	{
[38->43]	                        else ->
[43->43]	                        /*end;*/
                      [38->43]	}

[38->43]	                    fi;

[43->35]	                    atomic {
                      [43->35]	{
[43->44]	                        v-27!v-44;
[44->35]	                        v-28!v-45;
                      [43->35]	}
[43->35]	                    }

[45->35]	                    /*end;*/
                  [35->35]	}

		                ::
                  [35->35]	{
[35->47]	                    (((v-50>=v-49)&&(!((v-49==0)&&(v-50==0)))));
[46->47]	                    break;
[46->35]	                    /*end;*/
                  [35->35]	}

[35->47]	                od;

[46->47]	                /*end;*/
              [33->47]	}

		            ::
              [33->47]	{
[33->47]	                else ->
[47->47]	                /*end;*/
              [33->47]	}

[33->47]	            fi;

[47->75]	            if
		            ::
              [47->75]	{
[47->48]	                (((v-47==1)||(v-49==0)));
[48->49]	                v-50 = 0;
[49->75]	                do
		                ::
                  [49->49]	{
[49->50]	                    (((v-50<v-49)||((v-49==0)&&(v-50==0))));
[50->49]	                    if
		                    ::
                      [50->49]	{
[50->51]	                        ((empty(v-29)));
[51->53]	                        atomic {
                          [51->53]	{
[51->52]	                            v-23?v-44;
[52->53]	                            v-24?v-45;
                          [51->53]	}
[51->53]	                        }

[53->49]	                        atomic {
                          [53->49]	{
[53->54]	                            v-27!v-44;
[54->49]	                            v-28!v-45;
                          [53->49]	}
[53->49]	                        }

[55->49]	                        /*end;*/
                      [50->49]	}

		                    ::
                      [50->49]	{
[50->56]	                        ((!(empty(v-29))));
[56->49]	                        do
		                        ::
                          [56->56]	{
[56->57]	                            atomic {
                              [56->57]	{
[56->57]	                                v-23?v-44;
                              [56->57]	}
[56->57]	                            }

[57->56]	                            if
		                            ::
                              [57->56]	{
[57->58]	                                (v-44.v-21);
[58->66]	                                atomic {
                                  [58->66]	{
[58->59]	                                    v-29?v-45.v-12;
[59->60]	                                    v-44.v-21 = 0;
[60->61]	                                    v-50 = (v-50+1);
[61->62]	                                    v-44.v-18 = v-50;
[62->63]	                                    v-44.v-19 = (v-50/2);
[63->64]	                                    v-44.v-20 = (v-50/4);
[64->65]	                                    v-44.v-16 = 1;
[65->66]	                                    v-44.v-17 = v-48;
                                  [58->66]	}
[58->66]	                                }

[66->67]	                                v-24?v-45;
[67->49]	                                atomic {
                                  [67->49]	{
[67->68]	                                    v-27!v-44;
[68->49]	                                    v-28!v-45;
                                  [67->49]	}
[67->49]	                                }

[69->49]	                                break;
[69->56]	                                /*end;*/
                              [57->56]	}

		                            ::
                              [57->56]	{
[57->70]	                                else ->
[70->71]	                                v-24?v-45;
[71->56]	                                atomic {
                                  [71->56]	{
[71->72]	                                    v-27!v-44;
[72->56]	                                    v-28!v-45;
                                  [71->56]	}
[71->56]	                                }

[73->56]	                                /*end;*/
                              [57->56]	}

[57->56]	                            fi;

[73->56]	                            /*end;*/
                          [56->56]	}

[56->49]	                        od;

[73->49]	                        /*end;*/
                      [50->49]	}

[50->49]	                    fi;

[73->49]	                    /*end;*/
                  [49->49]	}

		                ::
                  [49->49]	{
[49->75]	                    (((v-50>=v-49)&&(!((v-49==0)&&(v-50==0)))));
[74->75]	                    break;
[74->49]	                    /*end;*/
                  [49->49]	}

[49->75]	                od;

[74->75]	                /*end;*/
              [47->75]	}

		            ::
              [47->75]	{
[47->75]	                else ->
[75->75]	                /*end;*/
              [47->75]	}

[47->75]	            fi;

[75->75]	            /*end;*/
          [31->75]	}

[31->75]	        fi;

[75->0]	        fin_req:
[75->0]	        /*end;*/
      [0->0]	}

[0->75]	    od;

  [0->75]	}

}

active [1] proctype WrapperEsclave0() { /* index: -56 */
  data_t data;/* index: -44 */
  req_t req;/* index: -45 */
  int locked;/* index: -46 */
  int src;/* index: -47 */
  int type;/* index: -48 */
  int dir;/* index: -49 */
  int lg;/* index: -50 */
  int cpt;/* index: -51 */
/* global variables dependences
  chan WM2_data_out = [1] of {data_t};/* index: -31 */
  chan WM2_req_out = [1] of {req_t};/* index: -32 */
  chan WS1_data_out = [1] of {data_t};/* index: -35 */
  chan WS1_req_out = [1] of {req_t};/* index: -36 */
  int nb_req = 0;/* index: -22 */
  chan WS1_to_task = [1] of {commande_t};/* index: -38 */
  chan WS1_from_task = [1] of {commande_t};/* index: -37 */
no more global variables dependences code is...*/

  [0->62]	{
[0->0]	    debut:
[0->62]	    do
		    ::
      [0->0]	{
[0->2]	        atomic {
          [0->2]	{
[0->1]	            v-31?v-44;
[1->2]	            v-32?v-45;
          [0->2]	}
[0->2]	        }

[2->0]	        if
		        ::
          [2->0]	{
[2->3]	            (((((!v-45.v-15)&&(!v-45.v-14))&&(v-45.v-12.v-6==0))&&((!v-46)||(v-45.v-13==v-47))));
[3->10]	            atomic {
              [3->10]	{
[3->4]	                v-50 = ((v-45.v-12.v-9+(v-45.v-12.v-10*2))+(v-45.v-12.v-11*4));
[4->5]	                v-48 = v-45.v-12.v-7;
[5->6]	                v-49 = v-45.v-12.v-8;
[6->7]	                v-47 = v-45.v-13;
[7->8]	                v-45.v-14 = 1;
[8->9]	                v-35!v-44;
[9->10]	                v-36!v-45;
              [3->10]	}
[3->10]	            }

[10->14]	            if
		            ::
              [10->14]	{
[10->11]	                (((v-48==0)&&(v-49==1)));
[11->14]	                atomic {
                  [11->14]	{
[11->12]	                    v-46 = (!v-46);
[12->0]	                    v-22 = (v-22-1);
[13->14]	                    goto debut;
                  [11->14]	}
[11->14]	                }

[13->14]	                /*end;*/
              [10->14]	}

		            ::
              [10->14]	{
[10->14]	                else ->
[14->14]	                /*end;*/
              [10->14]	}

[10->14]	            fi;

[14->15]	            v-38!v-45.v-12;
[15->17]	            if
		            ::
              [15->17]	{
[15->0]	                ((v-48==0));
[16->17]	                goto debut;
[16->17]	                /*end;*/
              [15->17]	}

		            ::
              [15->17]	{
[15->17]	                else ->
[17->17]	                /*end;*/
              [15->17]	}

[15->17]	            fi;

[17->45]	            if
		            ::
              [17->45]	{
[17->18]	                ((v-49==0));
[18->19]	                v-51 = 0;
[19->45]	                do
		                ::
                  [19->19]	{
[19->20]	                    (((v-51<v-50)||((v-50==0)&&(v-51==0))));
[20->19]	                    if
		                    ::
                      [20->19]	{
[20->21]	                        ((empty(v-37)));
[21->23]	                        atomic {
                          [21->23]	{
[21->22]	                            v-31?v-44;
[22->23]	                            v-32?v-45;
                          [21->23]	}
[21->23]	                        }

[23->19]	                        atomic {
                          [23->19]	{
[23->24]	                            v-35!v-44;
[24->19]	                            v-36!v-45;
                          [23->19]	}
[23->19]	                        }

[25->19]	                        /*end;*/
                      [20->19]	}

		                    ::
                      [20->19]	{
[20->26]	                        ((!(empty(v-37))));
[26->19]	                        do
		                        ::
                          [26->26]	{
[26->27]	                            atomic {
                              [26->27]	{
[26->27]	                                v-31?v-44;
                              [26->27]	}
[26->27]	                            }

[27->26]	                            if
		                            ::
                              [27->26]	{
[27->28]	                                (v-44.v-21);
[28->36]	                                atomic {
                                  [28->36]	{
[28->29]	                                    v-37?v-45.v-12;
[29->30]	                                    v-51 = (v-51+1);
[30->31]	                                    v-44.v-21 = 0;
[31->32]	                                    v-44.v-18 = v-51;
[32->33]	                                    v-44.v-19 = (v-51/2);
[33->34]	                                    v-44.v-20 = (v-51/4);
[34->35]	                                    v-44.v-16 = 0;
[35->36]	                                    v-44.v-17 = v-47;
                                  [28->36]	}
[28->36]	                                }

[36->37]	                                v-32?v-45;
[37->19]	                                atomic {
                                  [37->19]	{
[37->38]	                                    v-35!v-44;
[38->19]	                                    v-36!v-45;
                                  [37->19]	}
[37->19]	                                }

[39->19]	                                break;
[39->26]	                                /*end;*/
                              [27->26]	}

		                            ::
                              [27->26]	{
[27->40]	                                else ->
[40->41]	                                v-32?v-45;
[41->26]	                                atomic {
                                  [41->26]	{
[41->42]	                                    v-35!v-44;
[42->26]	                                    v-36!v-45;
                                  [41->26]	}
[41->26]	                                }

[43->26]	                                /*end;*/
                              [27->26]	}

[27->26]	                            fi;

[43->26]	                            /*end;*/
                          [26->26]	}

[26->19]	                        od;

[43->19]	                        /*end;*/
                      [20->19]	}

[20->19]	                    fi;

[43->19]	                    /*end;*/
                  [19->19]	}

		                ::
                  [19->19]	{
[19->45]	                    (((v-51>=v-50)&&(!((v-50==0)&&(v-51==0)))));
[44->45]	                    break;
[44->19]	                    /*end;*/
                  [19->19]	}

[19->45]	                od;

[44->45]	                /*end;*/
              [17->45]	}

		            ::
              [17->45]	{
[17->45]	                else ->
[45->45]	                /*end;*/
              [17->45]	}

[17->45]	            fi;

[45->0]	            if
		            ::
              [45->0]	{
[45->46]	                (((v-49==1)||(v-50==0)));
[46->47]	                v-51 = 0;
[47->0]	                do
		                ::
                  [47->47]	{
[47->48]	                    (((v-51<v-50)||((v-50==0)&&(v-51==0))));
[48->50]	                    atomic {
                      [48->50]	{
[48->49]	                        v-31?v-44;
[49->50]	                        v-32?v-45;
                      [48->50]	}
[48->50]	                    }

[50->55]	                    if
		                    ::
                      [50->55]	{
[50->51]	                        (((((!v-44.v-21)&&(v-44.v-16==1))&&(v-44.v-17==0))&&(((v-44.v-18+(v-44.v-19*2))+(v-44.v-20*4))==(v-51+1))));
[51->55]	                        atomic {
                          [51->55]	{
[51->52]	                            v-38!v-45.v-12;
[52->53]	                            v-51 = (v-51+1);
[53->55]	                            v-44.v-21 = 1;
                          [51->55]	}
[51->55]	                        }

[54->55]	                        /*end;*/
                      [50->55]	}

		                    ::
                      [50->55]	{
[50->55]	                        else ->
[55->55]	                        /*end;*/
                      [50->55]	}

[50->55]	                    fi;

[55->47]	                    atomic {
                      [55->47]	{
[55->56]	                        v-35!v-44;
[56->47]	                        v-36!v-45;
                      [55->47]	}
[55->47]	                    }

[57->47]	                    /*end;*/
                  [47->47]	}

		                ::
                  [47->47]	{
[47->0]	                    (((v-51>=v-50)&&(!((v-50==0)&&(v-51==0)))));
[58->0]	                    break;
[58->47]	                    /*end;*/
                  [47->47]	}

[47->0]	                od;

[58->0]	                /*end;*/
              [45->0]	}

		            ::
              [45->0]	{
[45->0]	                else ->
[59->0]	                /*end;*/
              [45->0]	}

[45->0]	            fi;

[59->0]	            /*end;*/
          [2->0]	}

		        ::
          [2->0]	{
[2->60]	            else ->
[60->0]	            atomic {
              [60->0]	{
[60->61]	                v-35!v-44;
[61->0]	                v-36!v-45;
              [60->0]	}
[60->0]	            }

[62->0]	            /*end;*/
          [2->0]	}

[2->0]	        fi;

[62->0]	        /*end;*/
      [0->0]	}

[0->62]	    od;

  [0->62]	}

}

active [1] proctype WrapperMaitre1() { /* index: -57 */
  data_t data;/* index: -44 */
  req_t req;/* index: -45 */
  int type;/* index: -46 */
  int dir;/* index: -47 */
  int dest;/* index: -48 */
  int lg;/* index: -49 */
  int cpt;/* index: -50 */
/* global variables dependences
  chan WM2_from_task = [1] of {commande_t};/* index: -33 */
  chan P2_data_out = [1] of {data_t};/* index: -25 */
  chan P2_req_out = [1] of {req_t};/* index: -26 */
  chan WM2_data_out = [1] of {data_t};/* index: -31 */
  chan WM2_req_out = [1] of {req_t};/* index: -32 */
  chan WM2_to_task = [1] of {commande_t};/* index: -34 */
no more global variables dependences code is...*/

  [0->75]	{
[0->0]	    debut:
[0->75]	    do
		    ::
      [0->0]	{
[0->1]	        ((empty(v-33)));
[1->3]	        atomic {
          [1->3]	{
[1->2]	            v-25?v-44;
[2->3]	            v-26?v-45;
          [1->3]	}
[1->3]	        }

[3->0]	        atomic {
          [3->0]	{
[3->4]	            v-31!v-44;
[4->0]	            v-32!v-45;
          [3->0]	}
[3->0]	        }

[5->0]	        /*end;*/
      [0->0]	}

		    ::
      [0->0]	{
[0->6]	        ((!(empty(v-33))));
[6->6]	        debut_req:
[6->12]	        do
		        ::
          [6->6]	{
[6->8]	            atomic {
              [6->8]	{
[6->7]	                v-25?v-44;
[7->8]	                v-26?v-45;
              [6->8]	}
[6->8]	            }

[8->6]	            if
		            ::
              [8->6]	{
[8->12]	                ((v-45.v-15==1));
[9->12]	                break;
[9->6]	                /*end;*/
              [8->6]	}

		            ::
              [8->6]	{
[8->10]	                ((v-45.v-15!=1));
[10->6]	                atomic {
                  [10->6]	{
[10->11]	                    v-31!v-44;
[11->6]	                    v-32!v-45;
                  [10->6]	}
[10->6]	                }

[12->6]	                /*end;*/
              [8->6]	}

[8->6]	            fi;

[12->6]	            /*end;*/
          [6->6]	}

[6->12]	        od;

[12->22]	        atomic {
          [12->22]	{
[12->13]	            v-33?v-45.v-12;
[13->14]	            v-45.v-14 = 0;
[14->15]	            v-45.v-15 = 0;
[15->16]	            v-45.v-13 = 1;
[16->17]	            v-46 = v-45.v-12.v-7;
[17->18]	            v-47 = v-45.v-12.v-8;
[18->19]	            v-49 = (((v-45.v-12.v-11*4)+(v-45.v-12.v-10*2))+v-45.v-12.v-9);
[19->20]	            v-48 = v-45.v-12.v-6;
[20->21]	            v-31!v-44;
[21->22]	            v-32!v-45;
          [12->22]	}
[12->22]	        }

[22->28]	        do
		        ::
          [22->22]	{
[22->24]	            atomic {
              [22->24]	{
[22->23]	                v-25?v-44;
[23->24]	                v-26?v-45;
              [22->24]	}
[22->24]	            }

[24->22]	            if
		            ::
              [24->22]	{
[24->28]	                ((((!v-45.v-15)&&v-45.v-14)&&(v-45.v-13==1)));
[25->28]	                break;
[25->22]	                /*end;*/
              [24->22]	}

		            ::
              [24->22]	{
[24->26]	                else ->
[26->22]	                atomic {
                  [26->22]	{
[26->27]	                    v-31!v-44;
[27->22]	                    v-32!v-45;
                  [26->22]	}
[26->22]	                }

[28->22]	                /*end;*/
              [24->22]	}

[24->22]	            fi;

[28->22]	            /*end;*/
          [22->22]	}

[22->28]	        od;

[28->31]	        atomic {
          [28->31]	{
[28->29]	            v-45.v-15 = 1;
[29->30]	            v-31!v-44;
[30->31]	            v-32!v-45;
          [28->31]	}
[28->31]	        }

[31->75]	        if
		        ::
          [31->75]	{
[31->0]	            ((v-46==0));
[32->75]	            goto debut;
[32->75]	            /*end;*/
          [31->75]	}

		        ::
          [31->75]	{
[31->33]	            else ->
[33->47]	            if
		            ::
              [33->47]	{
[33->34]	                ((v-47==0));
[34->35]	                v-50 = 0;
[35->47]	                do
		                ::
                  [35->35]	{
[35->36]	                    (((v-50<v-49)||((v-49==0)&&(v-50==0))));
[36->38]	                    atomic {
                      [36->38]	{
[36->37]	                        v-25?v-44;
[37->38]	                        v-26?v-45;
                      [36->38]	}
[36->38]	                    }

[38->43]	                    if
		                    ::
                      [38->43]	{
[38->39]	                        (((((!v-44.v-21)&&(((v-44.v-18+(v-44.v-19*2))+(v-44.v-20*4))==(v-50+1)))&&(v-44.v-16==0))&&(v-44.v-17==1)));
[39->43]	                        atomic {
                          [39->43]	{
[39->40]	                            v-34!v-45.v-12;
[40->41]	                            v-50 = (v-50+1);
[41->43]	                            v-44.v-21 = 1;
                          [39->43]	}
[39->43]	                        }

[42->43]	                        /*end;*/
                      [38->43]	}

		                    ::
                      [38->43]	{
[38->43]	                        else ->
[43->43]	                        /*end;*/
                      [38->43]	}

[38->43]	                    fi;

[43->35]	                    atomic {
                      [43->35]	{
[43->44]	                        v-31!v-44;
[44->35]	                        v-32!v-45;
                      [43->35]	}
[43->35]	                    }

[45->35]	                    /*end;*/
                  [35->35]	}

		                ::
                  [35->35]	{
[35->47]	                    (((v-50>=v-49)&&(!((v-49==0)&&(v-50==0)))));
[46->47]	                    break;
[46->35]	                    /*end;*/
                  [35->35]	}

[35->47]	                od;

[46->47]	                /*end;*/
              [33->47]	}

		            ::
              [33->47]	{
[33->47]	                else ->
[47->47]	                /*end;*/
              [33->47]	}

[33->47]	            fi;

[47->75]	            if
		            ::
              [47->75]	{
[47->48]	                (((v-47==1)||(v-49==0)));
[48->49]	                v-50 = 0;
[49->75]	                do
		                ::
                  [49->49]	{
[49->50]	                    (((v-50<v-49)||((v-49==0)&&(v-50==0))));
[50->49]	                    if
		                    ::
                      [50->49]	{
[50->51]	                        ((empty(v-33)));
[51->53]	                        atomic {
                          [51->53]	{
[51->52]	                            v-25?v-44;
[52->53]	                            v-26?v-45;
                          [51->53]	}
[51->53]	                        }

[53->49]	                        atomic {
                          [53->49]	{
[53->54]	                            v-31!v-44;
[54->49]	                            v-32!v-45;
                          [53->49]	}
[53->49]	                        }

[55->49]	                        /*end;*/
                      [50->49]	}

		                    ::
                      [50->49]	{
[50->56]	                        ((!(empty(v-33))));
[56->49]	                        do
		                        ::
                          [56->56]	{
[56->57]	                            atomic {
                              [56->57]	{
[56->57]	                                v-25?v-44;
                              [56->57]	}
[56->57]	                            }

[57->56]	                            if
		                            ::
                              [57->56]	{
[57->58]	                                (v-44.v-21);
[58->66]	                                atomic {
                                  [58->66]	{
[58->59]	                                    v-33?v-45.v-12;
[59->60]	                                    v-44.v-21 = 0;
[60->61]	                                    v-50 = (v-50+1);
[61->62]	                                    v-44.v-18 = v-50;
[62->63]	                                    v-44.v-19 = (v-50/2);
[63->64]	                                    v-44.v-20 = (v-50/4);
[64->65]	                                    v-44.v-16 = 1;
[65->66]	                                    v-44.v-17 = v-48;
                                  [58->66]	}
[58->66]	                                }

[66->67]	                                v-26?v-45;
[67->49]	                                atomic {
                                  [67->49]	{
[67->68]	                                    v-31!v-44;
[68->49]	                                    v-32!v-45;
                                  [67->49]	}
[67->49]	                                }

[69->49]	                                break;
[69->56]	                                /*end;*/
                              [57->56]	}

		                            ::
                              [57->56]	{
[57->70]	                                else ->
[70->71]	                                v-26?v-45;
[71->56]	                                atomic {
                                  [71->56]	{
[71->72]	                                    v-31!v-44;
[72->56]	                                    v-32!v-45;
                                  [71->56]	}
[71->56]	                                }

[73->56]	                                /*end;*/
                              [57->56]	}

[57->56]	                            fi;

[73->56]	                            /*end;*/
                          [56->56]	}

[56->49]	                        od;

[73->49]	                        /*end;*/
                      [50->49]	}

[50->49]	                    fi;

[73->49]	                    /*end;*/
                  [49->49]	}

		                ::
                  [49->49]	{
[49->75]	                    (((v-50>=v-49)&&(!((v-49==0)&&(v-50==0)))));
[74->75]	                    break;
[74->49]	                    /*end;*/
                  [49->49]	}

[49->75]	                od;

[74->75]	                /*end;*/
              [47->75]	}

		            ::
              [47->75]	{
[47->75]	                else ->
[75->75]	                /*end;*/
              [47->75]	}

[47->75]	            fi;

[75->75]	            /*end;*/
          [31->75]	}

[31->75]	        fi;

[75->0]	        fin_req:
[75->0]	        /*end;*/
      [0->0]	}

[0->75]	    od;

  [0->75]	}

}

active [1] proctype WrapperEsclave1() { /* index: -58 */
  data_t data;/* index: -44 */
  req_t req;/* index: -45 */
  int locked;/* index: -46 */
  int src;/* index: -47 */
  int type;/* index: -48 */
  int dir;/* index: -49 */
  int lg;/* index: -50 */
  int cpt;/* index: -51 */
/* global variables dependences
  chan WS1_data_out = [1] of {data_t};/* index: -35 */
  chan WS1_req_out = [1] of {req_t};/* index: -36 */
  chan WS2_data_out = [1] of {data_t};/* index: -39 */
  chan WS2_req_out = [1] of {req_t};/* index: -40 */
  int nb_req = 0;/* index: -22 */
  chan WS2_to_task = [1] of {commande_t};/* index: -42 */
  chan WS2_from_task = [1] of {commande_t};/* index: -41 */
no more global variables dependences code is...*/

  [0->62]	{
[0->0]	    debut:
[0->62]	    do
		    ::
      [0->0]	{
[0->2]	        atomic {
          [0->2]	{
[0->1]	            v-35?v-44;
[1->2]	            v-36?v-45;
          [0->2]	}
[0->2]	        }

[2->0]	        if
		        ::
          [2->0]	{
[2->3]	            (((((!v-45.v-15)&&(!v-45.v-14))&&(v-45.v-12.v-6==1))&&((!v-46)||(v-45.v-13==v-47))));
[3->10]	            atomic {
              [3->10]	{
[3->4]	                v-50 = ((v-45.v-12.v-9+(v-45.v-12.v-10*2))+(v-45.v-12.v-11*4));
[4->5]	                v-48 = v-45.v-12.v-7;
[5->6]	                v-49 = v-45.v-12.v-8;
[6->7]	                v-47 = v-45.v-13;
[7->8]	                v-45.v-14 = 1;
[8->9]	                v-39!v-44;
[9->10]	                v-40!v-45;
              [3->10]	}
[3->10]	            }

[10->14]	            if
		            ::
              [10->14]	{
[10->11]	                (((v-48==0)&&(v-49==1)));
[11->14]	                atomic {
                  [11->14]	{
[11->12]	                    v-46 = (!v-46);
[12->0]	                    v-22 = (v-22-1);
[13->14]	                    goto debut;
                  [11->14]	}
[11->14]	                }

[13->14]	                /*end;*/
              [10->14]	}

		            ::
              [10->14]	{
[10->14]	                else ->
[14->14]	                /*end;*/
              [10->14]	}

[10->14]	            fi;

[14->15]	            v-42!v-45.v-12;
[15->17]	            if
		            ::
              [15->17]	{
[15->0]	                ((v-48==0));
[16->17]	                goto debut;
[16->17]	                /*end;*/
              [15->17]	}

		            ::
              [15->17]	{
[15->17]	                else ->
[17->17]	                /*end;*/
              [15->17]	}

[15->17]	            fi;

[17->45]	            if
		            ::
              [17->45]	{
[17->18]	                ((v-49==0));
[18->19]	                v-51 = 0;
[19->45]	                do
		                ::
                  [19->19]	{
[19->20]	                    (((v-51<v-50)||((v-50==0)&&(v-51==0))));
[20->19]	                    if
		                    ::
                      [20->19]	{
[20->21]	                        ((empty(v-41)));
[21->23]	                        atomic {
                          [21->23]	{
[21->22]	                            v-35?v-44;
[22->23]	                            v-36?v-45;
                          [21->23]	}
[21->23]	                        }

[23->19]	                        atomic {
                          [23->19]	{
[23->24]	                            v-39!v-44;
[24->19]	                            v-40!v-45;
                          [23->19]	}
[23->19]	                        }

[25->19]	                        /*end;*/
                      [20->19]	}

		                    ::
                      [20->19]	{
[20->26]	                        ((!(empty(v-41))));
[26->19]	                        do
		                        ::
                          [26->26]	{
[26->27]	                            atomic {
                              [26->27]	{
[26->27]	                                v-35?v-44;
                              [26->27]	}
[26->27]	                            }

[27->26]	                            if
		                            ::
                              [27->26]	{
[27->28]	                                (v-44.v-21);
[28->36]	                                atomic {
                                  [28->36]	{
[28->29]	                                    v-41?v-45.v-12;
[29->30]	                                    v-51 = (v-51+1);
[30->31]	                                    v-44.v-21 = 0;
[31->32]	                                    v-44.v-18 = v-51;
[32->33]	                                    v-44.v-19 = (v-51/2);
[33->34]	                                    v-44.v-20 = (v-51/4);
[34->35]	                                    v-44.v-16 = 0;
[35->36]	                                    v-44.v-17 = v-47;
                                  [28->36]	}
[28->36]	                                }

[36->37]	                                v-36?v-45;
[37->19]	                                atomic {
                                  [37->19]	{
[37->38]	                                    v-39!v-44;
[38->19]	                                    v-40!v-45;
                                  [37->19]	}
[37->19]	                                }

[39->19]	                                break;
[39->26]	                                /*end;*/
                              [27->26]	}

		                            ::
                              [27->26]	{
[27->40]	                                else ->
[40->41]	                                v-36?v-45;
[41->26]	                                atomic {
                                  [41->26]	{
[41->42]	                                    v-39!v-44;
[42->26]	                                    v-40!v-45;
                                  [41->26]	}
[41->26]	                                }

[43->26]	                                /*end;*/
                              [27->26]	}

[27->26]	                            fi;

[43->26]	                            /*end;*/
                          [26->26]	}

[26->19]	                        od;

[43->19]	                        /*end;*/
                      [20->19]	}

[20->19]	                    fi;

[43->19]	                    /*end;*/
                  [19->19]	}

		                ::
                  [19->19]	{
[19->45]	                    (((v-51>=v-50)&&(!((v-50==0)&&(v-51==0)))));
[44->45]	                    break;
[44->19]	                    /*end;*/
                  [19->19]	}

[19->45]	                od;

[44->45]	                /*end;*/
              [17->45]	}

		            ::
              [17->45]	{
[17->45]	                else ->
[45->45]	                /*end;*/
              [17->45]	}

[17->45]	            fi;

[45->0]	            if
		            ::
              [45->0]	{
[45->46]	                (((v-49==1)||(v-50==0)));
[46->47]	                v-51 = 0;
[47->0]	                do
		                ::
                  [47->47]	{
[47->48]	                    (((v-51<v-50)||((v-50==0)&&(v-51==0))));
[48->50]	                    atomic {
                      [48->50]	{
[48->49]	                        v-35?v-44;
[49->50]	                        v-36?v-45;
                      [48->50]	}
[48->50]	                    }

[50->55]	                    if
		                    ::
                      [50->55]	{
[50->51]	                        (((((!v-44.v-21)&&(v-44.v-16==1))&&(v-44.v-17==1))&&(((v-44.v-18+(v-44.v-19*2))+(v-44.v-20*4))==(v-51+1))));
[51->55]	                        atomic {
                          [51->55]	{
[51->52]	                            v-42!v-45.v-12;
[52->53]	                            v-51 = (v-51+1);
[53->55]	                            v-44.v-21 = 1;
                          [51->55]	}
[51->55]	                        }

[54->55]	                        /*end;*/
                      [50->55]	}

		                    ::
                      [50->55]	{
[50->55]	                        else ->
[55->55]	                        /*end;*/
                      [50->55]	}

[50->55]	                    fi;

[55->47]	                    atomic {
                      [55->47]	{
[55->56]	                        v-39!v-44;
[56->47]	                        v-40!v-45;
                      [55->47]	}
[55->47]	                    }

[57->47]	                    /*end;*/
                  [47->47]	}

		                ::
                  [47->47]	{
[47->0]	                    (((v-51>=v-50)&&(!((v-50==0)&&(v-51==0)))));
[58->0]	                    break;
[58->47]	                    /*end;*/
                  [47->47]	}

[47->0]	                od;

[58->0]	                /*end;*/
              [45->0]	}

		            ::
              [45->0]	{
[45->0]	                else ->
[59->0]	                /*end;*/
              [45->0]	}

[45->0]	            fi;

[59->0]	            /*end;*/
          [2->0]	}

		        ::
          [2->0]	{
[2->60]	            else ->
[60->0]	            atomic {
              [60->0]	{
[60->61]	                v-39!v-44;
[61->0]	                v-40!v-45;
              [60->0]	}
[60->0]	            }

[62->0]	            /*end;*/
          [2->0]	}

[2->0]	        fi;

[62->0]	        /*end;*/
      [0->0]	}

[0->62]	    od;

  [0->62]	}

}

active [1] proctype TacheMaitre0() { /* index: -59 */
  commande_t request;/* index: -44 */
  int cpt;/* index: -45 */
/* global variables dependences
  int nb_req = 0;/* index: -22 */
  chan WM1_from_task = [1] of {commande_t};/* index: -29 */
  chan WM1_to_task = [1] of {commande_t};/* index: -30 */
no more global variables dependences code is...*/

  [0->40]	{
[0->0]	    debut:
[0->40]	    do
		    ::
      [0->0]	{
[0->1]	        ((v-22>0));
[1->1]	        terminaison:
[1->0]	        ((v-22==0));
[2->0]	        /*end;*/
      [0->0]	}

		    ::
      [0->0]	{
[0->21]	        atomic {
          [0->21]	{
[0->3]	            v-44.v-6 = 0;
[3->5]	            if
		            ::
              [3->5]	{
[3->5]	                v-44.v-7 = 0;
[4->5]	                /*end;*/
              [3->5]	}

		            ::
              [3->5]	{
[3->5]	                v-44.v-7 = 1;
[5->5]	                /*end;*/
              [3->5]	}

[3->5]	            fi;

[5->16]	            if
		            ::
              [5->16]	{
[5->6]	                ((v-44.v-7==1));
[6->8]	                if
		                ::
                  [6->8]	{
[6->8]	                    v-44.v-9 = 0;
[7->8]	                    /*end;*/
                  [6->8]	}

		                ::
                  [6->8]	{
[6->8]	                    v-44.v-9 = 1;
[8->8]	                    /*end;*/
                  [6->8]	}

[6->8]	                fi;

[8->10]	                if
		                ::
                  [8->10]	{
[8->10]	                    v-44.v-10 = 0;
[9->10]	                    /*end;*/
                  [8->10]	}

		                ::
                  [8->10]	{
[8->10]	                    v-44.v-10 = 1;
[10->10]	                    /*end;*/
                  [8->10]	}

[8->10]	                fi;

[10->16]	                if
		                ::
                  [10->16]	{
[10->16]	                    v-44.v-11 = 0;
[11->16]	                    /*end;*/
                  [10->16]	}

		                ::
                  [10->16]	{
[10->16]	                    v-44.v-11 = 1;
[12->16]	                    /*end;*/
                  [10->16]	}

[10->16]	                fi;

[12->16]	                /*end;*/
              [5->16]	}

		            ::
              [5->16]	{
[5->13]	                else ->
[13->14]	                v-44.v-9 = 0;
[14->15]	                v-44.v-10 = 0;
[15->16]	                v-44.v-11 = 0;
[16->16]	                /*end;*/
              [5->16]	}

[5->16]	            fi;

[16->21]	            if
		            ::
              [16->21]	{
[16->17]	                (((((v-44.v-9==0)&&(v-44.v-10==0))&&(v-44.v-11==0))&&(v-44.v-7==1)));
[17->21]	                v-44.v-8 = 0;
[18->21]	                /*end;*/
              [16->21]	}

		            ::
              [16->21]	{
[16->19]	                else ->
[19->21]	                if
		                ::
                  [19->21]	{
[19->21]	                    v-44.v-8 = 0;
[20->21]	                    /*end;*/
                  [19->21]	}

		                ::
                  [19->21]	{
[19->21]	                    v-44.v-8 = 1;
[21->21]	                    /*end;*/
                  [19->21]	}

[19->21]	                fi;

[21->21]	                /*end;*/
              [16->21]	}

[16->21]	            fi;

          [0->21]	}
[0->21]	        }

[21->21]	        progress:
[21->23]	        atomic {
          [21->23]	{
[21->22]	            v-29!v-44;
[22->23]	            v-22 = (v-22+1);
          [21->23]	}
[21->23]	        }

[23->26]	        if
		        ::
          [23->26]	{
[23->0]	            ((v-44.v-7==0));
[24->26]	            goto debut;
[24->26]	            /*end;*/
          [23->26]	}

		        ::
          [23->26]	{
[23->25]	            else ->
[25->26]	            v-45 = (((v-44.v-11*4)+(v-44.v-10*2))+v-44.v-9);
[26->26]	            /*end;*/
          [23->26]	}

[23->26]	        fi;

[26->0]	        if
		        ::
          [26->0]	{
[26->27]	            (((v-44.v-8==0)&&(v-45!=0)));
[27->0]	            do
		            ::
              [27->27]	{
[27->28]	                ((v-45>0));
[28->27]	                atomic {
                  [28->27]	{
[28->29]	                    v-30?v-44;
[29->27]	                    v-45 = (v-45-1);
                  [28->27]	}
[28->27]	                }

[30->27]	                /*end;*/
              [27->27]	}

		            ::
              [27->27]	{
[27->31]	                ((v-45==0));
[31->27]	                atomic {
                  [31->27]	{
[31->0]	                    v-22 = (v-22-1);
[32->0]	                    break;
                  [31->27]	}
[31->27]	                }

[32->27]	                /*end;*/
              [27->27]	}

[27->0]	            od;

[32->0]	            /*end;*/
          [26->0]	}

		        ::
          [26->0]	{
[26->33]	            ((v-44.v-8==1));
[33->0]	            do
		            ::
              [33->33]	{
[33->34]	                ((v-45>0));
[34->33]	                atomic {
                  [34->33]	{
[34->35]	                    v-29!v-44;
[35->33]	                    v-45 = (v-45-1);
                  [34->33]	}
[34->33]	                }

[36->33]	                /*end;*/
              [33->33]	}

		            ::
              [33->33]	{
[33->0]	                ((v-45==0));
[37->0]	                break;
[37->33]	                /*end;*/
              [33->33]	}

[33->0]	            od;

[37->0]	            /*end;*/
          [26->0]	}

		        ::
          [26->0]	{
[26->38]	            (((v-44.v-8==0)&&(v-45==0)));
[38->39]	            v-30?v-44;
[39->0]	            v-29!v-44;
[40->0]	            /*end;*/
          [26->0]	}

[26->0]	        fi;

[40->0]	        /*end;*/
      [0->0]	}

[0->40]	    od;

  [0->40]	}

}

active [1] proctype TacheEsclave0() { /* index: -60 */
  commande_t cde;/* index: -44 */
  int cpt;/* index: -45 */
/* global variables dependences
  chan WS1_to_task = [1] of {commande_t};/* index: -38 */
  int nb_req = 0;/* index: -22 */
  chan WS1_from_task = [1] of {commande_t};/* index: -37 */
no more global variables dependences code is...*/

  [0->21]	{
[0->0]	    debut:
[0->21]	    do
		    ::
      [0->0]	{
[0->1]	        ((!(empty(v-38))));
[1->6]	        atomic {
          [1->6]	{
[1->2]	            v-38?v-44;
[2->6]	            if
		            ::
              [2->6]	{
[2->3]	                ((v-44.v-7==0));
[3->0]	                v-22 = (v-22-1);
[4->6]	                goto debut;
[4->6]	                /*end;*/
              [2->6]	}

		            ::
              [2->6]	{
[2->5]	                ((v-44.v-7==1));
[5->6]	                v-45 = (((v-44.v-11*4)+(v-44.v-10*2))+v-44.v-9);
[6->6]	                /*end;*/
              [2->6]	}

[2->6]	            fi;

          [1->6]	}
[1->6]	        }

[6->0]	        if
		        ::
          [6->0]	{
[6->7]	            (((v-44.v-8==0)&&(v-45!=0)));
[7->0]	            do
		            ::
              [7->7]	{
[7->8]	                ((v-45>0));
[8->7]	                atomic {
                  [8->7]	{
[8->9]	                    v-45 = (v-45-1);
[9->7]	                    v-37!v-44;
                  [8->7]	}
[8->7]	                }

[10->7]	                /*end;*/
              [7->7]	}

		            ::
              [7->7]	{
[7->0]	                ((v-45==0));
[11->0]	                break;
[11->7]	                /*end;*/
              [7->7]	}

[7->0]	            od;

[11->0]	            /*end;*/
          [6->0]	}

		        ::
          [6->0]	{
[6->12]	            ((v-44.v-8==1));
[12->0]	            do
		            ::
              [12->12]	{
[12->13]	                ((v-45>0));
[13->12]	                atomic {
                  [13->12]	{
[13->14]	                    v-38?v-44;
[14->12]	                    v-45 = (v-45-1);
                  [13->12]	}
[13->12]	                }

[15->12]	                /*end;*/
              [12->12]	}

		            ::
              [12->12]	{
[12->16]	                ((v-45==0));
[16->12]	                atomic {
                  [16->12]	{
[16->0]	                    v-22 = (v-22-1);
[17->0]	                    break;
                  [16->12]	}
[16->12]	                }

[17->12]	                /*end;*/
              [12->12]	}

[12->0]	            od;

[17->0]	            /*end;*/
          [6->0]	}

		        ::
          [6->0]	{
[6->18]	            (((v-44.v-8==0)&&(v-45==0)));
[18->19]	            v-37!v-44;
[19->0]	            atomic {
              [19->0]	{
[19->20]	                v-38?v-44;
[20->0]	                v-22 = (v-22-1);
              [19->0]	}
[19->0]	            }

[21->0]	            /*end;*/
          [6->0]	}

[6->0]	        fi;

[21->0]	        /*end;*/
      [0->0]	}

[0->21]	    od;

  [0->21]	}

}

active [1] proctype TacheMaitre1() { /* index: -61 */
  commande_t request;/* index: -44 */
  int cpt;/* index: -45 */
/* global variables dependences
  int nb_req = 0;/* index: -22 */
  chan WM2_from_task = [1] of {commande_t};/* index: -33 */
  chan WM2_to_task = [1] of {commande_t};/* index: -34 */
no more global variables dependences code is...*/

  [0->40]	{
[0->0]	    debut:
[0->40]	    do
		    ::
      [0->0]	{
[0->1]	        ((v-22>0));
[1->1]	        terminaison:
[1->0]	        ((v-22==0));
[2->0]	        /*end;*/
      [0->0]	}

		    ::
      [0->0]	{
[0->21]	        atomic {
          [0->21]	{
[0->3]	            v-44.v-6 = 0;
[3->5]	            if
		            ::
              [3->5]	{
[3->5]	                v-44.v-7 = 0;
[4->5]	                /*end;*/
              [3->5]	}

		            ::
              [3->5]	{
[3->5]	                v-44.v-7 = 1;
[5->5]	                /*end;*/
              [3->5]	}

[3->5]	            fi;

[5->16]	            if
		            ::
              [5->16]	{
[5->6]	                ((v-44.v-7==1));
[6->8]	                if
		                ::
                  [6->8]	{
[6->8]	                    v-44.v-9 = 0;
[7->8]	                    /*end;*/
                  [6->8]	}

		                ::
                  [6->8]	{
[6->8]	                    v-44.v-9 = 1;
[8->8]	                    /*end;*/
                  [6->8]	}

[6->8]	                fi;

[8->10]	                if
		                ::
                  [8->10]	{
[8->10]	                    v-44.v-10 = 0;
[9->10]	                    /*end;*/
                  [8->10]	}

		                ::
                  [8->10]	{
[8->10]	                    v-44.v-10 = 1;
[10->10]	                    /*end;*/
                  [8->10]	}

[8->10]	                fi;

[10->16]	                if
		                ::
                  [10->16]	{
[10->16]	                    v-44.v-11 = 0;
[11->16]	                    /*end;*/
                  [10->16]	}

		                ::
                  [10->16]	{
[10->16]	                    v-44.v-11 = 1;
[12->16]	                    /*end;*/
                  [10->16]	}

[10->16]	                fi;

[12->16]	                /*end;*/
              [5->16]	}

		            ::
              [5->16]	{
[5->13]	                else ->
[13->14]	                v-44.v-9 = 0;
[14->15]	                v-44.v-10 = 0;
[15->16]	                v-44.v-11 = 0;
[16->16]	                /*end;*/
              [5->16]	}

[5->16]	            fi;

[16->21]	            if
		            ::
              [16->21]	{
[16->17]	                (((((v-44.v-9==0)&&(v-44.v-10==0))&&(v-44.v-11==0))&&(v-44.v-7==1)));
[17->21]	                v-44.v-8 = 0;
[18->21]	                /*end;*/
              [16->21]	}

		            ::
              [16->21]	{
[16->19]	                else ->
[19->21]	                if
		                ::
                  [19->21]	{
[19->21]	                    v-44.v-8 = 0;
[20->21]	                    /*end;*/
                  [19->21]	}

		                ::
                  [19->21]	{
[19->21]	                    v-44.v-8 = 1;
[21->21]	                    /*end;*/
                  [19->21]	}

[19->21]	                fi;

[21->21]	                /*end;*/
              [16->21]	}

[16->21]	            fi;

          [0->21]	}
[0->21]	        }

[21->21]	        progress:
[21->23]	        atomic {
          [21->23]	{
[21->22]	            v-33!v-44;
[22->23]	            v-22 = (v-22+1);
          [21->23]	}
[21->23]	        }

[23->26]	        if
		        ::
          [23->26]	{
[23->0]	            ((v-44.v-7==0));
[24->26]	            goto debut;
[24->26]	            /*end;*/
          [23->26]	}

		        ::
          [23->26]	{
[23->25]	            else ->
[25->26]	            v-45 = (((v-44.v-11*4)+(v-44.v-10*2))+v-44.v-9);
[26->26]	            /*end;*/
          [23->26]	}

[23->26]	        fi;

[26->0]	        if
		        ::
          [26->0]	{
[26->27]	            (((v-44.v-8==0)&&(v-45!=0)));
[27->0]	            do
		            ::
              [27->27]	{
[27->28]	                ((v-45>0));
[28->27]	                atomic {
                  [28->27]	{
[28->29]	                    v-34?v-44;
[29->27]	                    v-45 = (v-45-1);
                  [28->27]	}
[28->27]	                }

[30->27]	                /*end;*/
              [27->27]	}

		            ::
              [27->27]	{
[27->31]	                ((v-45==0));
[31->27]	                atomic {
                  [31->27]	{
[31->0]	                    v-22 = (v-22-1);
[32->0]	                    break;
                  [31->27]	}
[31->27]	                }

[32->27]	                /*end;*/
              [27->27]	}

[27->0]	            od;

[32->0]	            /*end;*/
          [26->0]	}

		        ::
          [26->0]	{
[26->33]	            ((v-44.v-8==1));
[33->0]	            do
		            ::
              [33->33]	{
[33->34]	                ((v-45>0));
[34->33]	                atomic {
                  [34->33]	{
[34->35]	                    v-33!v-44;
[35->33]	                    v-45 = (v-45-1);
                  [34->33]	}
[34->33]	                }

[36->33]	                /*end;*/
              [33->33]	}

		            ::
              [33->33]	{
[33->0]	                ((v-45==0));
[37->0]	                break;
[37->33]	                /*end;*/
              [33->33]	}

[33->0]	            od;

[37->0]	            /*end;*/
          [26->0]	}

		        ::
          [26->0]	{
[26->38]	            (((v-44.v-8==0)&&(v-45==0)));
[38->39]	            v-34?v-44;
[39->0]	            v-33!v-44;
[40->0]	            /*end;*/
          [26->0]	}

[26->0]	        fi;

[40->0]	        /*end;*/
      [0->0]	}

[0->40]	    od;

  [0->40]	}

}

active [1] proctype TacheEsclave1() { /* index: -62 */
  commande_t cde;/* index: -44 */
  int cpt;/* index: -45 */
/* global variables dependences
  chan WS2_to_task = [1] of {commande_t};/* index: -42 */
  int nb_req = 0;/* index: -22 */
  chan WS2_from_task = [1] of {commande_t};/* index: -41 */
no more global variables dependences code is...*/

  [0->21]	{
[0->0]	    debut:
[0->21]	    do
		    ::
      [0->0]	{
[0->1]	        ((!(empty(v-42))));
[1->6]	        atomic {
          [1->6]	{
[1->2]	            v-42?v-44;
[2->6]	            if
		            ::
              [2->6]	{
[2->3]	                ((v-44.v-7==0));
[3->0]	                v-22 = (v-22-1);
[4->6]	                goto debut;
[4->6]	                /*end;*/
              [2->6]	}

		            ::
              [2->6]	{
[2->5]	                ((v-44.v-7==1));
[5->6]	                v-45 = (((v-44.v-11*4)+(v-44.v-10*2))+v-44.v-9);
[6->6]	                /*end;*/
              [2->6]	}

[2->6]	            fi;

          [1->6]	}
[1->6]	        }

[6->0]	        if
		        ::
          [6->0]	{
[6->7]	            (((v-44.v-8==0)&&(v-45!=0)));
[7->0]	            do
		            ::
              [7->7]	{
[7->8]	                ((v-45>0));
[8->7]	                atomic {
                  [8->7]	{
[8->9]	                    v-45 = (v-45-1);
[9->7]	                    v-41!v-44;
                  [8->7]	}
[8->7]	                }

[10->7]	                /*end;*/
              [7->7]	}

		            ::
              [7->7]	{
[7->0]	                ((v-45==0));
[11->0]	                break;
[11->7]	                /*end;*/
              [7->7]	}

[7->0]	            od;

[11->0]	            /*end;*/
          [6->0]	}

		        ::
          [6->0]	{
[6->12]	            ((v-44.v-8==1));
[12->0]	            do
		            ::
              [12->12]	{
[12->13]	                ((v-45>0));
[13->12]	                atomic {
                  [13->12]	{
[13->14]	                    v-42?v-44;
[14->12]	                    v-45 = (v-45-1);
                  [13->12]	}
[13->12]	                }

[15->12]	                /*end;*/
              [12->12]	}

		            ::
              [12->12]	{
[12->16]	                ((v-45==0));
[16->12]	                atomic {
                  [16->12]	{
[16->0]	                    v-22 = (v-22-1);
[17->0]	                    break;
                  [16->12]	}
[16->12]	                }

[17->12]	                /*end;*/
              [12->12]	}

[12->0]	            od;

[17->0]	            /*end;*/
          [6->0]	}

		        ::
          [6->0]	{
[6->18]	            (((v-44.v-8==0)&&(v-45==0)));
[18->19]	            v-41!v-44;
[19->0]	            atomic {
              [19->0]	{
[19->20]	                v-42?v-44;
[20->0]	                v-22 = (v-22-1);
              [19->0]	}
[19->0]	            }

[21->0]	            /*end;*/
          [6->0]	}

[6->0]	        fi;

[21->0]	        /*end;*/
      [0->0]	}

[0->21]	    od;

  [0->21]	}

}

