GAL Dynamic_Philosophers_flat {
	array [3] Outside = (1, 1, 1) ;
	array [9] Neighbourhood = (0, 0, 0, 0, 0, 0, 0, 0, 0) ;
	array [3] Think = (0, 0, 0) ;
	array [3] Forks = (0, 0, 0) ;
	array [3] WaitLeft = (0, 0, 0) ;
	array [3] WaitRight = (0, 0, 0) ;
	array [3] HasLeft = (0, 0, 0) ;
	array [3] HasRight = (0, 0, 0) ;

	transition Initialize_0_1 [Outside [1] >= 1 && Outside [2] >= 1 && Outside [0] >= 1] {
		Forks [0] = Forks [0] + 1 ;
		Forks [1] = Forks [1] + 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Think [0] = Think [0] + 1 ;
		Think [1] = Think [1] + 1 ;
		Outside [0] = Outside [0] + 1 ;
		Outside [1] = Outside [1] - 1 ;
	}

	transition Initialize_0_2 [Outside [1] >= 1 && Outside [2] >= 1 && Outside [0] >= 1] {
		Forks [0] = Forks [0] + 1 ;
		Forks [2] = Forks [2] + 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Think [0] = Think [0] + 1 ;
		Think [2] = Think [2] + 1 ;
		Outside [0] = Outside [0] + 1 ;
		Outside [2] = Outside [2] - 1 ;
	}

	transition Initialize_1_0 [Outside [1] >= 1 && Outside [2] >= 1 && Outside [0] >= 1] {
		Forks [1] = Forks [1] + 1 ;
		Forks [0] = Forks [0] + 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Think [1] = Think [1] + 1 ;
		Think [0] = Think [0] + 1 ;
		Outside [1] = Outside [1] + 1 ;
		Outside [0] = Outside [0] - 1 ;
	}

	transition Initialize_1_2 [Outside [1] >= 1 && Outside [2] >= 1 && Outside [0] >= 1] {
		Forks [1] = Forks [1] + 1 ;
		Forks [2] = Forks [2] + 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Think [1] = Think [1] + 1 ;
		Think [2] = Think [2] + 1 ;
		Outside [1] = Outside [1] + 1 ;
		Outside [2] = Outside [2] - 1 ;
	}

	transition Initialize_2_0 [Outside [1] >= 1 && Outside [2] >= 1 && Outside [0] >= 1] {
		Forks [2] = Forks [2] + 1 ;
		Forks [0] = Forks [0] + 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Think [2] = Think [2] + 1 ;
		Think [0] = Think [0] + 1 ;
		Outside [2] = Outside [2] + 1 ;
		Outside [0] = Outside [0] - 1 ;
	}

	transition Initialize_2_1 [Outside [1] >= 1 && Outside [2] >= 1 && Outside [0] >= 1] {
		Forks [2] = Forks [2] + 1 ;
		Forks [1] = Forks [1] + 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Think [2] = Think [2] + 1 ;
		Think [1] = Think [1] + 1 ;
		Outside [2] = Outside [2] + 1 ;
		Outside [1] = Outside [1] - 1 ;
	}

	transition Join_0_0_0 [Forks [0] >= 1 && Forks [0] >= 1 && Outside [0] >= 1 && Neighbourhood [0] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_0_1 [Forks [0] >= 1 && Forks [1] >= 1 && Outside [0] >= 1 && Neighbourhood [3] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_0_2 [Forks [0] >= 1 && Forks [2] >= 1 && Outside [0] >= 1 && Neighbourhood [6] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_1_0 [Forks [1] >= 1 && Forks [0] >= 1 && Outside [0] >= 1 && Neighbourhood [1] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_1_1 [Forks [1] >= 1 && Forks [1] >= 1 && Outside [0] >= 1 && Neighbourhood [4] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_1_2 [Forks [1] >= 1 && Forks [2] >= 1 && Outside [0] >= 1 && Neighbourhood [7] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_2_0 [Forks [2] >= 1 && Forks [0] >= 1 && Outside [0] >= 1 && Neighbourhood [2] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_2_1 [Forks [2] >= 1 && Forks [1] >= 1 && Outside [0] >= 1 && Neighbourhood [5] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_0_2_2 [Forks [2] >= 1 && Forks [2] >= 1 && Outside [0] >= 1 && Neighbourhood [8] >= 1] {
		Outside [0] = Outside [0] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Think [0] = Think [0] + 1 ;
	}

	transition Join_1_0_0 [Forks [0] >= 1 && Forks [0] >= 1 && Outside [1] >= 1 && Neighbourhood [0] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_0_1 [Forks [0] >= 1 && Forks [1] >= 1 && Outside [1] >= 1 && Neighbourhood [3] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_0_2 [Forks [0] >= 1 && Forks [2] >= 1 && Outside [1] >= 1 && Neighbourhood [6] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_1_0 [Forks [1] >= 1 && Forks [0] >= 1 && Outside [1] >= 1 && Neighbourhood [1] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_1_1 [Forks [1] >= 1 && Forks [1] >= 1 && Outside [1] >= 1 && Neighbourhood [4] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_1_2 [Forks [1] >= 1 && Forks [2] >= 1 && Outside [1] >= 1 && Neighbourhood [7] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_2_0 [Forks [2] >= 1 && Forks [0] >= 1 && Outside [1] >= 1 && Neighbourhood [2] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_2_1 [Forks [2] >= 1 && Forks [1] >= 1 && Outside [1] >= 1 && Neighbourhood [5] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_1_2_2 [Forks [2] >= 1 && Forks [2] >= 1 && Outside [1] >= 1 && Neighbourhood [8] >= 1] {
		Outside [1] = Outside [1] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Think [1] = Think [1] + 1 ;
	}

	transition Join_2_0_0 [Forks [0] >= 1 && Forks [0] >= 1 && Outside [2] >= 1 && Neighbourhood [0] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_0_1 [Forks [0] >= 1 && Forks [1] >= 1 && Outside [2] >= 1 && Neighbourhood [3] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_0_2 [Forks [0] >= 1 && Forks [2] >= 1 && Outside [2] >= 1 && Neighbourhood [6] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_1_0 [Forks [1] >= 1 && Forks [0] >= 1 && Outside [2] >= 1 && Neighbourhood [1] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_1_1 [Forks [1] >= 1 && Forks [1] >= 1 && Outside [2] >= 1 && Neighbourhood [4] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_1_2 [Forks [1] >= 1 && Forks [2] >= 1 && Outside [2] >= 1 && Neighbourhood [7] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_2_0 [Forks [2] >= 1 && Forks [0] >= 1 && Outside [2] >= 1 && Neighbourhood [2] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_2_1 [Forks [2] >= 1 && Forks [1] >= 1 && Outside [2] >= 1 && Neighbourhood [5] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Join_2_2_2 [Forks [2] >= 1 && Forks [2] >= 1 && Outside [2] >= 1 && Neighbourhood [8] >= 1] {
		Outside [2] = Outside [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Think [2] = Think [2] + 1 ;
	}

	transition Leave_0_0_0 [Forks [0] >= 1 && Neighbourhood [0] >= 1 && Neighbourhood [0] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 2 ;
		Think [0] = Think [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_0_0_1 [Forks [0] >= 1 && Neighbourhood [3] >= 1 && Neighbourhood [0] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 1 ;
		Think [0] = Think [0] - 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_0_0_2 [Forks [0] >= 1 && Neighbourhood [6] >= 1 && Neighbourhood [0] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 1 ;
		Think [0] = Think [0] - 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_0_1_0 [Forks [1] >= 1 && Neighbourhood [1] >= 1 && Neighbourhood [3] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] - 1 ;
		Think [1] = Think [1] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_0_1_1 [Forks [1] >= 1 && Neighbourhood [4] >= 1 && Neighbourhood [3] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 1 ;
		Think [1] = Think [1] - 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_0_1_2 [Forks [1] >= 1 && Neighbourhood [7] >= 1 && Neighbourhood [3] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] - 1 ;
		Think [1] = Think [1] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] + 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_0_2_0 [Forks [2] >= 1 && Neighbourhood [2] >= 1 && Neighbourhood [6] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] - 1 ;
		Think [2] = Think [2] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] + 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_0_2_1 [Forks [2] >= 1 && Neighbourhood [5] >= 1 && Neighbourhood [6] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] - 1 ;
		Think [2] = Think [2] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] + 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_0_2_2 [Forks [2] >= 1 && Neighbourhood [8] >= 1 && Neighbourhood [6] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 1 ;
		Think [2] = Think [2] - 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_1_0_0 [Forks [0] >= 1 && Neighbourhood [0] >= 1 && Neighbourhood [1] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 1 ;
		Think [0] = Think [0] - 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_1_0_1 [Forks [0] >= 1 && Neighbourhood [3] >= 1 && Neighbourhood [1] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] - 1 ;
		Think [0] = Think [0] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_1_0_2 [Forks [0] >= 1 && Neighbourhood [6] >= 1 && Neighbourhood [1] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] - 1 ;
		Think [0] = Think [0] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] + 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_1_1_0 [Forks [1] >= 1 && Neighbourhood [1] >= 1 && Neighbourhood [4] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 1 ;
		Think [1] = Think [1] - 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_1_1_1 [Forks [1] >= 1 && Neighbourhood [4] >= 1 && Neighbourhood [4] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 2 ;
		Think [1] = Think [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_1_1_2 [Forks [1] >= 1 && Neighbourhood [7] >= 1 && Neighbourhood [4] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 1 ;
		Think [1] = Think [1] - 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_1_2_0 [Forks [2] >= 1 && Neighbourhood [2] >= 1 && Neighbourhood [7] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] - 1 ;
		Think [2] = Think [2] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] + 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_1_2_1 [Forks [2] >= 1 && Neighbourhood [5] >= 1 && Neighbourhood [7] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] - 1 ;
		Think [2] = Think [2] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] + 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_1_2_2 [Forks [2] >= 1 && Neighbourhood [8] >= 1 && Neighbourhood [7] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 1 ;
		Think [2] = Think [2] - 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_2_0_0 [Forks [0] >= 1 && Neighbourhood [0] >= 1 && Neighbourhood [2] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [0] = Neighbourhood [0] - 1 ;
		Think [0] = Think [0] - 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_2_0_1 [Forks [0] >= 1 && Neighbourhood [3] >= 1 && Neighbourhood [2] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [3] = Neighbourhood [3] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] - 1 ;
		Think [0] = Think [0] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] + 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_2_0_2 [Forks [0] >= 1 && Neighbourhood [6] >= 1 && Neighbourhood [2] >= 1 && Think [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		Neighbourhood [6] = Neighbourhood [6] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] - 1 ;
		Think [0] = Think [0] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Outside [0] = Outside [0] + 1 ;
	}

	transition Leave_2_1_0 [Forks [1] >= 1 && Neighbourhood [1] >= 1 && Neighbourhood [5] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [1] = Neighbourhood [1] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] - 1 ;
		Think [1] = Think [1] - 1 ;
		Neighbourhood [2] = Neighbourhood [2] + 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_2_1_1 [Forks [1] >= 1 && Neighbourhood [4] >= 1 && Neighbourhood [5] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [4] = Neighbourhood [4] - 1 ;
		Think [1] = Think [1] - 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_2_1_2 [Forks [1] >= 1 && Neighbourhood [7] >= 1 && Neighbourhood [5] >= 1 && Think [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		Neighbourhood [7] = Neighbourhood [7] - 1 ;
		Neighbourhood [5] = Neighbourhood [5] - 1 ;
		Think [1] = Think [1] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Outside [1] = Outside [1] + 1 ;
	}

	transition Leave_2_2_0 [Forks [2] >= 1 && Neighbourhood [2] >= 1 && Neighbourhood [8] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 1 ;
		Think [2] = Think [2] - 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_2_2_1 [Forks [2] >= 1 && Neighbourhood [5] >= 1 && Neighbourhood [8] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 1 ;
		Think [2] = Think [2] - 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition Leave_2_2_2 [Forks [2] >= 1 && Neighbourhood [8] >= 1 && Neighbourhood [8] >= 1 && Think [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] - 2 ;
		Think [2] = Think [2] - 1 ;
		Neighbourhood [8] = Neighbourhood [8] + 1 ;
		Outside [2] = Outside [2] + 1 ;
	}

	transition SearchForks_0 [Think [0] >= 1] {
		Think [0] = Think [0] - 1 ;
		WaitRight [0] = WaitRight [0] + 1 ;
		WaitLeft [0] = WaitLeft [0] + 1 ;
	}

	transition SearchForks_1 [Think [1] >= 1] {
		Think [1] = Think [1] - 1 ;
		WaitRight [1] = WaitRight [1] + 1 ;
		WaitLeft [1] = WaitLeft [1] + 1 ;
	}

	transition SearchForks_2 [Think [2] >= 1] {
		Think [2] = Think [2] - 1 ;
		WaitRight [2] = WaitRight [2] + 1 ;
		WaitLeft [2] = WaitLeft [2] + 1 ;
	}

	transition TakeLeft_0 [Forks [0] >= 1 && WaitLeft [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		WaitLeft [0] = WaitLeft [0] - 1 ;
		HasLeft [0] = HasLeft [0] + 1 ;
	}

	transition TakeLeft_1 [Forks [1] >= 1 && WaitLeft [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		WaitLeft [1] = WaitLeft [1] - 1 ;
		HasLeft [1] = HasLeft [1] + 1 ;
	}

	transition TakeLeft_2 [Forks [2] >= 1 && WaitLeft [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		WaitLeft [2] = WaitLeft [2] - 1 ;
		HasLeft [2] = HasLeft [2] + 1 ;
	}

	transition TakeRight_0_0 [Forks [0] >= 1 && Neighbourhood [0] >= 1 && WaitRight [0] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		WaitRight [0] = WaitRight [0] - 1 ;
		HasRight [0] = HasRight [0] + 1 ;
	}

	transition TakeRight_0_1 [Forks [1] >= 1 && Neighbourhood [1] >= 1 && WaitRight [0] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		WaitRight [0] = WaitRight [0] - 1 ;
		HasRight [0] = HasRight [0] + 1 ;
	}

	transition TakeRight_0_2 [Forks [2] >= 1 && Neighbourhood [2] >= 1 && WaitRight [0] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		WaitRight [0] = WaitRight [0] - 1 ;
		HasRight [0] = HasRight [0] + 1 ;
	}

	transition TakeRight_1_0 [Forks [0] >= 1 && Neighbourhood [3] >= 1 && WaitRight [1] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		WaitRight [1] = WaitRight [1] - 1 ;
		HasRight [1] = HasRight [1] + 1 ;
	}

	transition TakeRight_1_1 [Forks [1] >= 1 && Neighbourhood [4] >= 1 && WaitRight [1] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		WaitRight [1] = WaitRight [1] - 1 ;
		HasRight [1] = HasRight [1] + 1 ;
	}

	transition TakeRight_1_2 [Forks [2] >= 1 && Neighbourhood [5] >= 1 && WaitRight [1] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		WaitRight [1] = WaitRight [1] - 1 ;
		HasRight [1] = HasRight [1] + 1 ;
	}

	transition TakeRight_2_0 [Forks [0] >= 1 && Neighbourhood [6] >= 1 && WaitRight [2] >= 1] {
		Forks [0] = Forks [0] - 1 ;
		WaitRight [2] = WaitRight [2] - 1 ;
		HasRight [2] = HasRight [2] + 1 ;
	}

	transition TakeRight_2_1 [Forks [1] >= 1 && Neighbourhood [7] >= 1 && WaitRight [2] >= 1] {
		Forks [1] = Forks [1] - 1 ;
		WaitRight [2] = WaitRight [2] - 1 ;
		HasRight [2] = HasRight [2] + 1 ;
	}

	transition TakeRight_2_2 [Forks [2] >= 1 && Neighbourhood [8] >= 1 && WaitRight [2] >= 1] {
		Forks [2] = Forks [2] - 1 ;
		WaitRight [2] = WaitRight [2] - 1 ;
		HasRight [2] = HasRight [2] + 1 ;
	}

	transition Eat_0_0 [Neighbourhood [0] >= 1 && HasRight [0] >= 1 && HasLeft [0] >= 1] {
		HasRight [0] = HasRight [0] - 1 ;
		HasLeft [0] = HasLeft [0] - 1 ;
		Think [0] = Think [0] + 1 ;
		Forks [0] = Forks [0] + 2 ;
	}

	transition Eat_0_1 [Neighbourhood [1] >= 1 && HasRight [0] >= 1 && HasLeft [0] >= 1] {
		HasRight [0] = HasRight [0] - 1 ;
		HasLeft [0] = HasLeft [0] - 1 ;
		Think [0] = Think [0] + 1 ;
		Forks [0] = Forks [0] + 1 ;
		Forks [1] = Forks [1] + 1 ;
	}

	transition Eat_0_2 [Neighbourhood [2] >= 1 && HasRight [0] >= 1 && HasLeft [0] >= 1] {
		HasRight [0] = HasRight [0] - 1 ;
		HasLeft [0] = HasLeft [0] - 1 ;
		Think [0] = Think [0] + 1 ;
		Forks [0] = Forks [0] + 1 ;
		Forks [2] = Forks [2] + 1 ;
	}

	transition Eat_1_0 [Neighbourhood [3] >= 1 && HasRight [1] >= 1 && HasLeft [1] >= 1] {
		HasRight [1] = HasRight [1] - 1 ;
		HasLeft [1] = HasLeft [1] - 1 ;
		Think [1] = Think [1] + 1 ;
		Forks [1] = Forks [1] + 1 ;
		Forks [0] = Forks [0] + 1 ;
	}

	transition Eat_1_1 [Neighbourhood [4] >= 1 && HasRight [1] >= 1 && HasLeft [1] >= 1] {
		HasRight [1] = HasRight [1] - 1 ;
		HasLeft [1] = HasLeft [1] - 1 ;
		Think [1] = Think [1] + 1 ;
		Forks [1] = Forks [1] + 2 ;
	}

	transition Eat_1_2 [Neighbourhood [5] >= 1 && HasRight [1] >= 1 && HasLeft [1] >= 1] {
		HasRight [1] = HasRight [1] - 1 ;
		HasLeft [1] = HasLeft [1] - 1 ;
		Think [1] = Think [1] + 1 ;
		Forks [1] = Forks [1] + 1 ;
		Forks [2] = Forks [2] + 1 ;
	}

	transition Eat_2_0 [Neighbourhood [6] >= 1 && HasRight [2] >= 1 && HasLeft [2] >= 1] {
		HasRight [2] = HasRight [2] - 1 ;
		HasLeft [2] = HasLeft [2] - 1 ;
		Think [2] = Think [2] + 1 ;
		Forks [2] = Forks [2] + 1 ;
		Forks [0] = Forks [0] + 1 ;
	}

	transition Eat_2_1 [Neighbourhood [7] >= 1 && HasRight [2] >= 1 && HasLeft [2] >= 1] {
		HasRight [2] = HasRight [2] - 1 ;
		HasLeft [2] = HasLeft [2] - 1 ;
		Think [2] = Think [2] + 1 ;
		Forks [2] = Forks [2] + 1 ;
		Forks [1] = Forks [1] + 1 ;
	}

	transition Eat_2_2 [Neighbourhood [8] >= 1 && HasRight [2] >= 1 && HasLeft [2] >= 1] {
		HasRight [2] = HasRight [2] - 1 ;
		HasLeft [2] = HasLeft [2] - 1 ;
		Think [2] = Think [2] + 1 ;
		Forks [2] = Forks [2] + 2 ;
	}
	TRANSIENT = false ;
}