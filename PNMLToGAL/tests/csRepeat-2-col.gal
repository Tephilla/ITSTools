typedef Client = 0 .. 3 ;
typedef Server = 0 .. 1 ;
GAL Client_Server_with_Repetitions {
	array [1] requestBufferSlots = (2) ;
	array [4] clientSending = (0, 0, 0, 0) ;
	array [4] requestBuffer = (0, 0, 0, 0) ;
	array [2] serverWaiting = (1, 1) ;
	array [4] clientWaiting = (1, 1, 1, 1) ;
	array [8] serverAnwering = (0, 0, 0, 0, 0, 0, 0, 0) ;

	transition sendRequest (Client $c) [requestBufferSlots [0] >= 1 && clientSending [$c] >= 1] {
		requestBufferSlots [0] = requestBufferSlots [0] - 1 ;
		requestBuffer [$c] = requestBuffer [$c] + 1 ;
	}

	transition readRequest (Server $s, Client $c) [requestBuffer [$c] >= 1 && serverWaiting [$s] >= 1] {
		requestBuffer [$c] = requestBuffer [$c] - 1 ;
		serverWaiting [$s] = serverWaiting [$s] - 1 ;
		requestBufferSlots [0] = requestBufferSlots [0] + 1 ;
		serverAnwering [$c * 2 + $s] = serverAnwering [$c * 2 + $s] + 1 ;
	}

	transition prepareRequest (Client $c) [clientWaiting [$c] >= 1] {
		clientWaiting [$c] = clientWaiting [$c] - 1 ;
		clientSending [$c] = clientSending [$c] + 1 ;
	}

	transition loseRequest (Client $c) [requestBuffer [$c] >= 1] {
		requestBuffer [$c] = requestBuffer [$c] - 1 ;
	}

	transition sendAnswer (Server $s, Client $c) [clientSending [$c] >= 1 && serverAnwering [$c * 2 + $s] >= 1] {
		clientSending [$c] = clientSending [$c] - 1 ;
		serverAnwering [$c * 2 + $s] = serverAnwering [$c * 2 + $s] - 1 ;
		serverWaiting [$s] = serverWaiting [$s] + 1 ;
		clientWaiting [$c] = clientWaiting [$c] + 1 ;
	}
	TRANSIENT = False ;
}