gal bakery_2_flat {
	/** @pcvar process P_0_0   Dom:[0, 1, 3, 7, 10] */
	int P_0_0_pcVar_ = 0 ;
	int P_0_0__max = 0 ;
	int P_0_0__j = 0 ;
	/** @pcvar process P_1_0   Dom:[0, 1, 3, 7, 10] */
	int P_1_0_pcVar_ = 0 ;
	int P_1_0__max = 0 ;
	int P_1_0__j = 0 ;
	/**    Dom:[0, 1] */
	array [2] choosing = (0, 0) ;
	array [2] number = (0, 0) ;
	/** @proctrans P_0_0   10 -> 0 : Assignment */
	transition P_0_0__t0__from_10_to_0 [P_0_0_pcVar_ == 10] {
		/** Assignment */
		number [0] = 0 ;
		/**  @PCUpdate 0 */
		P_0_0_pcVar_ = 0 ;
	}
	/** @proctrans P_0_0   7 -> 3 : Atomic */
	transition P_0_0__t1__from_7_to_3 [P_0_0_pcVar_ == 7 && (number [P_0_0__j] == 0 || number [P_0_0__j] < number [0] ||
	number [P_0_0__j] == number [0] && 0 <= P_0_0__j)] {
		/** Première instruction de l'atomic*/
		P_0_0__j = P_0_0__j + 1 ;
		/**  @PCUpdate 3 */
		P_0_0_pcVar_ = 3 ;
	}
	/** @proctrans P_0_0   1 -> 1 : Atomic */
	transition P_0_0__t2__from_1_to_1 [P_0_0_pcVar_ == 1 && (P_0_0__j < 2 && number [P_0_0__j] > P_0_0__max)] {
		/** Première instruction de l'atomic*/
		P_0_0__max = number [P_0_0__j] ;
		/** Assignment */
		P_0_0__j = P_0_0__j + 1 ;
		/**  @PCUpdate 1 */
		P_0_0_pcVar_ = 1 ;
	}
	/** @proctrans P_0_0   1 -> 1 : Atomic */
	transition P_0_0__t3__from_1_to_1 [P_0_0_pcVar_ == 1 && (P_0_0__j < 2 && number [P_0_0__j] <= P_0_0__max)] {
		/** Première instruction de l'atomic*/
		P_0_0__j = P_0_0__j + 1 ;
		/**  @PCUpdate 1 */
		P_0_0_pcVar_ = 1 ;
	}
	/** @proctrans P_0_0   3 -> 10 : Goto */
	transition P_0_0__t4__from_3_to_10 [P_0_0_pcVar_ == 3 && P_0_0__j == 2] {
		/**  @PCUpdate 10 */
		P_0_0_pcVar_ = 10 ;
	}
	/** @proctrans P_0_0   0 -> 1 : Atomic */
	transition P_0_0__t5__from_0_to_1 [P_0_0_pcVar_ == 0] {
		/** Première instruction de l'atomic*/
		choosing [0] = 1 ;
		/** Assignment */
		P_0_0__j = 0 ;
		/** Assignment */
		P_0_0__max = 0 ;
		/**  @PCUpdate 1 */
		P_0_0_pcVar_ = 1 ;
	}
	/** @proctrans P_0_0   1 -> 3 : Atomic */
	transition P_0_0__t6__from_1_to_3 [P_0_0_pcVar_ == 1 && (P_0_0__j == 2 && P_0_0__max < 6)] {
		/** Première instruction de l'atomic*/
		number [0] = P_0_0__max + 1 ;
		/** Assignment */
		P_0_0__j = 0 ;
		/** Assignment */
		choosing [0] = 0 ;
		/**  @PCUpdate 3 */
		P_0_0_pcVar_ = 3 ;
	}
	/** @proctrans P_0_0   3 -> 7 : Goto */
	transition P_0_0__t7__from_3_to_7 [P_0_0_pcVar_ == 3 && (P_0_0__j < 2 && choosing [P_0_0__j] == 0)] {
		/**  @PCUpdate 7 */
		P_0_0_pcVar_ = 7 ;
	}
	/** @proctrans P_1_0   3 -> 7 : Goto */
	transition P_1_0__t0__from_3_to_7 [P_1_0_pcVar_ == 3 && (P_1_0__j < 2 && choosing [P_1_0__j] == 0)] {
		/**  @PCUpdate 7 */
		P_1_0_pcVar_ = 7 ;
	}
	/** @proctrans P_1_0   0 -> 1 : Atomic */
	transition P_1_0__t1__from_0_to_1 [P_1_0_pcVar_ == 0] {
		/** Première instruction de l'atomic*/
		choosing [1] = 1 ;
		/** Assignment */
		P_1_0__j = 0 ;
		/** Assignment */
		P_1_0__max = 0 ;
		/**  @PCUpdate 1 */
		P_1_0_pcVar_ = 1 ;
	}
	/** @proctrans P_1_0   3 -> 10 : Goto */
	transition P_1_0__t2__from_3_to_10 [P_1_0_pcVar_ == 3 && P_1_0__j == 2] {
		/**  @PCUpdate 10 */
		P_1_0_pcVar_ = 10 ;
	}
	/** @proctrans P_1_0   1 -> 1 : Atomic */
	transition P_1_0__t3__from_1_to_1 [P_1_0_pcVar_ == 1 && (P_1_0__j < 2 && number [P_1_0__j] > P_1_0__max)] {
		/** Première instruction de l'atomic*/
		P_1_0__max = number [P_1_0__j] ;
		/** Assignment */
		P_1_0__j = P_1_0__j + 1 ;
		/**  @PCUpdate 1 */
		P_1_0_pcVar_ = 1 ;
	}
	/** @proctrans P_1_0   1 -> 3 : Atomic */
	transition P_1_0__t4__from_1_to_3 [P_1_0_pcVar_ == 1 && (P_1_0__j == 2 && P_1_0__max < 6)] {
		/** Première instruction de l'atomic*/
		number [1] = P_1_0__max + 1 ;
		/** Assignment */
		P_1_0__j = 0 ;
		/** Assignment */
		choosing [1] = 0 ;
		/**  @PCUpdate 3 */
		P_1_0_pcVar_ = 3 ;
	}
	/** @proctrans P_1_0   10 -> 0 : Assignment */
	transition P_1_0__t5__from_10_to_0 [P_1_0_pcVar_ == 10] {
		/** Assignment */
		number [1] = 0 ;
		/**  @PCUpdate 0 */
		P_1_0_pcVar_ = 0 ;
	}
	/** @proctrans P_1_0   7 -> 3 : Atomic */
	transition P_1_0__t6__from_7_to_3 [P_1_0_pcVar_ == 7 && (number [P_1_0__j] == 0 || number [P_1_0__j] < number [1] ||
	number [P_1_0__j] == number [1] && 1 <= P_1_0__j)] {
		/** Première instruction de l'atomic*/
		P_1_0__j = P_1_0__j + 1 ;
		/**  @PCUpdate 3 */
		P_1_0_pcVar_ = 3 ;
	}
	/** @proctrans P_1_0   1 -> 1 : Atomic */
	transition P_1_0__t7__from_1_to_1 [P_1_0_pcVar_ == 1 && (P_1_0__j < 2 && number [P_1_0__j] <= P_1_0__max)] {
		/** Première instruction de l'atomic*/
		P_1_0__j = P_1_0__j + 1 ;
		/**  @PCUpdate 1 */
		P_1_0_pcVar_ = 1 ;
	}
}