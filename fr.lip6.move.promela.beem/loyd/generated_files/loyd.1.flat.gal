gal loyd_1_flat {
	int y = 0 ;
	int x = 0 ;
	/** @pcvar process _Init_0   Dom:[0, 1, 2] */
	int _Init_0_pcVar_ = 0 ;
	/** @pcvar processP_Run161 */
	int P_Run161_pcVar_ = - 1 ;
	/** @pcvar processCheck_Run162 */
	int Check_Run162_pcVar_ = - 1 ;
	/**    Dom:[0, 1, 2, 3, 4, 5] */
	array [6] a = (0, 0, 0, 0, 0, 0) ;
	/** @proctrans _Init_0   0 -> 1 : Atomic */
	transition _Init_0__t0__from_0_to_1 [_Init_0_pcVar_ == 0] {
		/** Première instruction de l'atomic*/
		a [0] = 0 ;
		/** Assignment */
		a [1] = 1 ;
		/** Assignment */
		a [2] = 2 ;
		/** Assignment */
		a [3] = 3 ;
		/** Assignment */
		a [4] = 4 ;
		/** Assignment */
		a [5] = 5 ;
		/**  @PCUpdate 1 */
		_Init_0_pcVar_ = 1 ;
	}
	/** @proctrans _Init_0   1 -> 2 : Atomic */
	transition _Init_0__t1__from_1_to_2 [_Init_0_pcVar_ == 1] {
		/** Première instruction de l'atomic*/
		P_Run161_pcVar_ = 0 ;
		/** @start process Check */
		Check_Run162_pcVar_ = 0 ;
		/**  @PCUpdate 2 */
		_Init_0_pcVar_ = 2 ;
	}
	/** @proctrans P_Run161   0 -> 0 : Atomic */
	transition P_Run161__t0__from_0_to_0 [P_Run161_pcVar_ == 0 && y > 0] {
		/** Première instruction de l'atomic*/
		a [y * 2 + x] = a [(y - 1) * 2 + x] ;
		/** Assignment */
		a [(y - 1) * 2 + x] = 0 ;
		/** Assignment */
		y = y - 1 ;
		/**  @PCUpdate 0 */
		P_Run161_pcVar_ = 0 ;
	}
	/** @proctrans P_Run161   0 -> 0 : Atomic */
	transition P_Run161__t1__from_0_to_0 [P_Run161_pcVar_ == 0 && x < 1] {
		/** Première instruction de l'atomic*/
		a [y * 2 + x] = a [y * 2 + x + 1] ;
		/** Assignment */
		a [y * 2 + x + 1] = 0 ;
		/** Assignment */
		x = x + 1 ;
		/**  @PCUpdate 0 */
		P_Run161_pcVar_ = 0 ;
	}
	/** @proctrans P_Run161   0 -> 0 : Atomic */
	transition P_Run161__t2__from_0_to_0 [P_Run161_pcVar_ == 0 && y < 2] {
		/** Première instruction de l'atomic*/
		a [y * 2 + x] = a [(y + 1) * 2 + x] ;
		/** Assignment */
		a [(y + 1) * 2 + x] = 0 ;
		/** Assignment */
		y = y + 1 ;
		/**  @PCUpdate 0 */
		P_Run161_pcVar_ = 0 ;
	}
	/** @proctrans P_Run161   0 -> 0 : Atomic */
	transition P_Run161__t3__from_0_to_0 [P_Run161_pcVar_ == 0 && x > 0] {
		/** Première instruction de l'atomic*/
		a [y * 2 + x] = a [y * 2 + x - 1] ;
		/** Assignment */
		a [y * 2 + x - 1] = 0 ;
		/** Assignment */
		x = x - 1 ;
		/**  @PCUpdate 0 */
		P_Run161_pcVar_ = 0 ;
	}
	/** @proctrans Check_Run162   0 -> 1 : Goto */
	transition Check_Run162__t0__from_0_to_1 [Check_Run162_pcVar_ == 0 && (a [0] == 5 && a [1] == 4 && a [2] == 3 && a
	[3] == 2 && a [4] == 1 && a [5] == 0)] {
		/**  @PCUpdate 1 */
		Check_Run162_pcVar_ = 1 ;
	}
}