grammar fr.lip6.move.Gal with org.eclipse.xtext.common.Terminals

generate gal "http://www.lip6.fr/move/Gal"

System :
    ('system' name=ID '{'
        (variables+=VariableDeclaration)*
        transitions+=Transition+
       '}'
    )?
;

VariableDeclaration returns Variable:
    name=ID '=' initVal=INT ';'
;

Transition:
    'transition' name=ID '[' garde=(Or) ']' ('label' label=STRING)? '{'
        actions += Action+
    '}'  
;

Action:
	action=Assignment
;


Assignment :
    var=VariableRef '=' expr=Addition ';'
;

Addition returns IntExpression:
    Multiplication (
        ({Addition.left=current} '+' | {Subtraction.left=current} '-' )
        right=Multiplication
    )*
;

Multiplication returns IntExpression :
    UnitaryMinus
    (
        ({Multiplication.left=current} '*' | {Division.left=current} '/' | {Modulo.left=current} '%')  
        right=UnitaryMinus
    )*
;

UnitaryMinus returns IntExpression :
    ('-'? Power {UnitaryMinus.val=current})
;


Power returns IntExpression:
    Primary ({Power.left=current} '**' right=Primary)*
;

Primary returns IntExpression :
    VariableRef | Constante | '(' Addition ')'
;

Constante:
    val=INT
;

VariableRef  :
    var=[Variable]
;

/////////////////////////////////////////////////////////////////////
// moins prioritaire --> plus prioritaire
// Or --> And --> Not

Or returns BooleanExpression :
    And ({Or.left=current} '||' right=And)*
;


And returns BooleanExpression:
    Not ({And.left=current} '&&' right=Not)*
;

Comparison returns BooleanExpression:
    Addition ({Comparison.left=current} '<' right=Addition)+
;

CompOperators:
    '<' | '>' | '>=' | '<=' | '==' | '!='
;

Not returns BooleanExpression :
    ('!'? PrimaryBool {Not.val=current} )
;

PrimaryBool returns BooleanExpression:
    ConstanteBool |  '(' Or ')'
;

ConstanteBool :
    value=('TRUE' | 'FALSE')
;
